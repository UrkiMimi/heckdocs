{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Heck","text":"<p>what the heck!?</p> <p>heck refers to both the library that powers all these mods, and the collection of the mods that use it.</p> <p>These mods are all about giving the mapper more power to make amazing maps! These features range from moving walls around mid-flight, creating fake notes, and even coloring bombs, all on a pre-programmed path. Now, one can even import full custom scenes designed in the Unity editor. Together, these mods can be installed by a user and will activate on a map that requires these mods.</p> <p>Join the Discord here: https://discord.gg/rrZf3kapeh</p> <p>Note</p> <p>This documentation is NOT a tutorial for mapping, json editing, or scripting. Instead, it lists all the features within all of the mods and their respective syntax.</p> <p>Ready? Visit Getting Started.</p>"},{"location":"getting-started/","title":"Getting Started","text":"<p>It is recommended when mapping, to use the launch argument <code>--verbose</code> in order to open the console with the game. If there are any errors with your map, they will display here along with the beat of the erroneous object. SERIOUSLY IF YOU RELEASE A MAP WITH ANY ERRORS, I WILL FIND YOU.</p>"},{"location":"getting-started/#capabilities","title":"Capabilities","text":"<p>In order to use Chroma, Noodle Extensions, or Vivify, you MUST add the appropriate capability to your map, otherwise the mod will not activate. You can go here to see how adding requirements to the info.dat works.</p> <p>Currently these capabilities are:</p> <ul> <li><code>\"Chroma\"</code>: Suggestion or Requirement</li> <li><code>\"Noodle Extensions\"</code>: Requirement Only</li> <li><code>\"Vivify\"</code>: Requirement Only</li> </ul> <p>Info</p> <p><code>\"AudioLink\"</code> may also be added as either a suggestion or requirement, however that mod will always run regardless of if the map has the capability set.</p>"},{"location":"getting-started/#customjsondata","title":"CustomJSONData","text":"<p>All the extra JSON fields are powered by CustomJSONData, which adds the <code>customData</code> field and <code>customEvents</code> array.</p>"},{"location":"getting-started/#custom-data","title":"Custom Data","text":"<p><code>customData</code> fields allow adding additional arbitrary data to any existing objects, like notes/walls/lighting events.</p> <p>Example</p> <pre><code>\"colorNotes\":[\n  {\n    \"b\": 8.0,\n    \"x\": 2,\n    \"y\": 0,\n    \"c\": 1,\n    \"d\": 1,\n    \"customData\": {\n      \"foo\": 3,\n      \"bar\": \"Hello, BSMG!\"\n    }\n  }\n]\n</code></pre>"},{"location":"getting-started/#custom-events","title":"Custom Events","text":"<p>Custom events are stored inside the <code>customEvents</code> field of your difficulty's <code>customData</code>. Not to be confused with vanilla lighting events with custom data added, these are entirely new events.</p> <p>Example</p> <pre><code>{\n  \"version\": \"3.0.0\",\n  \"customData\": {\n    \"customEvents\": [\n      {\n        \"b\": float,\n        \"t\": string,\n        \"d\": {\n          \"foo\": 1.0,\n          \"message\": \"Hello from a custom event!\"\n        }\n      }\n    ]\n  },\n  \"colorNotes\": [],\n  \"obstacles\": []\n}\n</code></pre>"},{"location":"getting-started/#reloader","title":"ReLoader","text":"<p>Need to quickly prototype your map? Tired of having to exit the song and reload? Well Reloader is for you! Originally starting as a mod developed by Kyle1413 before being integrated into Heck, ReLoader allows hot reloading beatmaps and scrubbing through time without ever opening a menu.</p>"},{"location":"getting-started/#enabling","title":"Enabling","text":"<p>In order to activate ReLoader, you must be in Debug Mode, which is activated with the launch parameter <code>-aerolunaisthebestmodder</code> (yes really). Afterwards, entering any song in practice mode will activate ReLoader.</p>"},{"location":"getting-started/#keybinds","title":"Keybinds","text":"<p>These key binds are configurable from <code>UserData/Heck.json</code>.</p> <ul> <li>Left Control - Save current time.</li> <li>Space - Jump to saved time/hot reload beatmap.</li> <li>Left Arrow - Scrub backwards 5 seconds.</li> <li>Right Arrow - Scrub forwards 5 seconds.</li> </ul> <p>Additionally, pressing your reload key while in the practice menu where you select your start time and song speed will also hot reload the map you currently have selected.</p>"},{"location":"getting-started/#reload-on-restart","title":"ReLoad on Restart","text":"<p>Unfortunately, environments changes through Chroma cannot be hot ReLoaded\u2122 while in-game, so to help with that, there is an additional <code>\"ReloadOnRestart\"</code> option with in the config that will automatically reload the JSON whenever you restart the map.</p> <code>UserData/Heck.json</code> <pre><code>{\n  \"ReLoader\": {\n    \"JumpToSavedTime\": \"Space\",\n    \"Reload\": \"Space\",\n    \"ReloadOnRestart\": true,\n    \"SaveTime\": \"LeftControl\",\n    \"ScrubBackwards\": \"LeftArrow\",\n    \"ScrubForwards\": \"RightArrow\",\n    \"ScrubIncrement\": 5.0\n  }\n}\n</code></pre> <p>Tip</p> <p>You can quickly restart by pressing <code>F4</code> (SiraUtil), or by navigating the pause menu using <code>P</code> to pause and <code>R</code> to restart (vanilla).</p>"},{"location":"settings/","title":"Settings Setter","text":"<p>Annoyed by that one streamer who always play with static lights? Recommend they play your map with the correct settings using Settings Setter\u2122!</p> <p>Additionally, other mod developers can add compatibility to have their mod integrate with settings setter as well. If the appropriate mod for which your setting comes from is not installed, Heck will skip over your setting.</p> <p>Warning</p> <p>Although all settings are included for posterity's sake, it is HIGHLY recommended to only list settings you NEED, e.g. your map uses a lot of text and left handed mode needs to be disabled to not mirror your text. Keep it to the bare minimum!</p>"},{"location":"settings/#adding-recommended-settings","title":"Adding recommended settings","text":"<ul> <li><code>\"_customData\"</code> -&gt; <code>\"_settings\"</code><ul> <li><code>category</code>: The category your setting belongs to. See below for category names.<ul> <li><code>setting name</code>: The name of your setting. See below for setting names.</li> </ul> </li> </ul> </li> </ul> <p>Custom data for settable settings is set in the info.dat.</p> <p>Example</p> <pre><code>{\n  \"_version\": \"2.0.0\",\n  \"_songName\": \"NULCTRL MEISO FLIP\",\n  ...\n  \"_difficultyBeatmapSets\": [\n    {\n      \"_beatmapCharacteristicName\": \"Standard\",\n      \"_difficultyBeatmaps\": [\n        {\n          \"_difficulty\": \"ExpertPlus\",\n          \"_difficultyRank\": 9,\n          \"_beatmapFilename\": \"ExpertPlusStandard.dat\",\n          \"_noteJumpMovementSpeed\": 19,\n          \"_customData\": {\n            \"_settings\": {\n              \"_playerOptions\":{\n                \"_leftHanded\": true,\n                \"_hideNoteSpawnEffect\": false\n              },\n              \"_graphics\": {\n                \"_mirrorGraphicsSettings\": 0\n              },\n              \"_chroma\": {\n                \"_disableEnvironmentEnhancements\": true\n              }\n            }\n          }\n        }\n      ]\n    }\n  ]\n}\n</code></pre>"},{"location":"settings/#categories","title":"Categories","text":""},{"location":"settings/#vanilla","title":"Vanilla","text":"<p>These settings are implemented by default.</p> <ul> <li><code>\"_playerOptions\"</code><ul> <li><code>\"_leftHanded\": bool</code></li> <li><code>\"_playerHeight\": float</code></li> <li><code>\"_automaticPlayerHeight\": bool</code></li> <li><code>\"_sfxVolume\": float</code></li> <li><code>\"_reduceDebris\": bool</code></li> <li><code>\"_noTextsAndHuds\": bool</code></li> <li><code>\"_noFailEffects\": bool</code> Hidden setting: This will hide \"Miss\" text.</li> <li><code>\"_advancedHud\": bool</code></li> <li><code>\"_autoRestart\": bool</code></li> <li><code>\"_saberTrailIntensity\": float</code></li> <li><code>\"_noteJumpDurationTypeSettings\": \"Dynamic\"/\"Static\"</code></li> <li><code>\"_noteJumpFixedDuration\": float</code> Only available w/ \"Static\"</li> <li><code>\"_noteJumpStartBeatOffset\": float</code> Only available w/ \"Dynamic\",<ul> <li>Close: <code>-0.5</code></li> <li>Closer: <code>-0.25</code></li> <li>Default: <code>0</code></li> <li>Further: <code>0.25</code></li> <li>Far: <code>0.5</code></li> </ul> </li> <li><code>\"_hideNoteSpawnEffect\": bool</code></li> <li><code>\"_adaptiveSfx\": bool</code></li> <li><code>\"_environmentEffectsFilterDefaultPreset\": \"AllEffects\"/\"StrobeFilter\"/\"NoEffects\"</code></li> <li><code>\"_environmentEffectsFilterExpertPlusPreset\": \"AllEffects\"/\"StrobeFilter\"/\"NoEffects\"</code></li> </ul> </li> <li><code>\"_modifiers\"</code><ul> <li><code>\"_energyType\": Bar, Battery</code></li> <li><code>\"_noFailOn0Energy\": bool</code></li> <li><code>\"_instaFail\": bool</code></li> <li><code>\"_failOnSaberClash\": bool</code> Hidden setting: Instantly fails player when sabers clash.</li> <li><code>\"_enabledObstacleType\": \"All\"/\"FullHeightOnly\"/\"NoObstacles\"</code> The <code>\"FullHeightOnly\"</code> option is a hidden setting and disables crouch walls.</li> <li><code>\"_fastNotes\": bool</code> Hidden setting: Forces NJS to 20.</li> <li><code>\"_strictAngles\": bool</code></li> <li><code>\"_disappearingArrows\": bool</code></li> <li><code>\"_ghostNotes\": bool</code></li> <li><code>\"_noBombs\": bool</code></li> <li><code>\"_songSpeed\": \"Normal\"/\"Faster\"/\"Slower\"/\"SuperFast\"</code></li> <li><code>\"_noArrows\": bool</code></li> <li><code>\"_proMode\": bool</code></li> <li><code>\"_zenMode\": bool</code></li> <li><code>\"_smallCubes\": bool</code></li> </ul> </li> <li><code>\"_environments\"</code><ul> <li><code>\"_overrideEnvironments\": bool</code> Enable or disable user environment. If you are using chroma environment enhancement, this setting is redundant.</li> </ul> </li> <li><code>\"_colors\"</code><ul> <li><code>\"_overrideDefaultColors\": bool</code> Enable or disable user color scheme.</li> </ul> </li> <li><code>\"_graphics\"</code><ul> <li><code>\"_mirrorGraphicsSettings\": int (0 - 3)</code> Off/Low (0/1) will not create cameras. \"Low\" duplicates base game notes to create a \"fake\" mirror.</li> <li><code>\"_mainEffectGraphicsSettings\": int (0 - 1)</code> \"Bloom Post Process\" Disabling will switch to baked/fake \"Quest style\" bloom</li> <li><code>\"_smokeGraphicsSettings\": int (0 - 1)</code> Also enables depth texture/\"Soft Particles\" when used.</li> <li><code>\"_burnMarkTrailsEnabled\": bool</code> Hidden setting: Hides burn trails left by sabers.</li> <li><code>\"_screenDisplacementEffectsEnabled\": bool</code></li> <li><code>\"_maxShockwaveParticles\": int (0 - 2)</code></li> </ul> </li> </ul>"},{"location":"settings/#chroma","title":"Chroma","text":"<ul> <li><code>\"_chroma\"</code><ul> <li><code>\"_disableChromaEvents\": bool</code></li> <li><code>\"_disableEnvironmentEnhancements\": bool</code></li> <li><code>\"_disableNoteColoring\": bool</code></li> <li><code>\"_forceZenModeWalls\": bool</code></li> </ul> </li> </ul>"},{"location":"settings/#other-mods","title":"Other Mods","text":"<p>There are a handful of other mods with support for Settings Setter as well. Main properties for these will be provided here, and the full list of available settings will be linked alongside if required.</p>"},{"location":"settings/#counters","title":"Counters+","text":"<p>Full property list with things like HUD offsets, size, colors, etc can be found on the Counters+ Wiki.</p> <ul> <li><code>\"_countersPlus\"</code><ul> <li><code>\"_mainEnabled\": bool</code></li> <li><code>\"_mainParentedToBaseGameHUD\": bool</code></li> <li><code>\"_missedEnabled\": bool</code></li> <li><code>\"_progressEnabled\": bool</code></li> <li><code>\"_scoreEnabled\": bool</code></li> <li><code>\"_personalBestEnabled\": bool</code></li> <li><code>\"_speedEnabled\": bool</code></li> <li><code>\"_cutEnabled\": bool</code></li> <li><code>\"_spinometerEnabled\": bool</code></li> <li><code>\"_notesLeftEnabled\": bool</code></li> <li><code>\"_failEnabled\": bool</code></li> </ul> </li> </ul>"},{"location":"settings/#uitweaks","title":"UITweaks","text":"<p>UITweaks Wiki</p> <ul> <li><code>\"_uiTweaks\"</code><ul> <li><code>\"_multiplierEnabled\": bool</code></li> <li><code>\"_energyEnabled\": bool</code></li> <li><code>\"_comboEnabled\": bool</code></li> <li><code>\"_positionEnabled\": bool</code></li> <li><code>\"_progressEnabled\": bool</code></li> </ul> </li> </ul>"},{"location":"settings/#notetweaks","title":"NoteTweaks","text":"<p>Significantly more settings and all default values can be found at the NoteTweaks Wiki.</p> <ul> <li><code>\"_noteTweaks\"</code><ul> <li><code>\"_enabled\": bool</code></li> <li><code>\"_enableBombOutlines\": bool</code></li> <li><code>\"_enableNoteOutlines\": bool</code></li> <li><code>\"_enableAccDot\": bool</code></li> <li><code>\"_enableDots\": bool</code></li> <li><code>\"_enableChainDots\": bool</code></li> <li><code>\"_fixDotsIfNoodle\": bool</code></li> <li><code>\"_enableFog\": bool</code></li> <li><code>\"_enableHeightFog\": bool</code></li> <li><code>\"_noteScaleX\": float</code></li> <li><code>\"_noteScaleY\": float</code></li> <li><code>\"_noteScaleZ\": float</code></li> <li><code>\"_arrowScaleX\": float</code></li> <li><code>\"_arrowScaleY\": float</code></li> <li><code>\"_dotScaleX\": float</code></li> <li><code>\"_dotScaleY\": float</code></li> <li><code>\"_linkScale\": float</code></li> <li><code>\"_bombScale\": float</code></li> </ul> </li> </ul> <p>Tip</p> <p>Noodle will override any scaling options set by NoteTweaks or BS+. If you don't want any random \"big note jumpscares\", it's a good idea to assign all notes a scale value of <code>[1,1,1]</code> using Noodle directly.</p>"},{"location":"animation/additional-events/","title":"Additional Events","text":"<p>These are additional custom events that use tracks and point definitions.</p>"},{"location":"animation/additional-events/#noodle-extensions","title":"Noodle Extensions","text":""},{"location":"animation/additional-events/#assigntrackparent","title":"AssignTrackParent","text":"<pre><code>{\n  \"b\": float, // Time in beats.\n  \"t\": \"AssignTrackParent\",\n  \"d\": {\n    \"childrenTracks\": string[], // Array of tracks to parent to _parentTrack.\n    \"parentTrack\": string, // The track you want to animate.\n    \"worldPositionStays\": bool // Defaults to false if not set. See https://docs.unity3d.com/ScriptReference/Transform.SetParent.html\n  }\n}\n</code></pre> <p><code>AssignTrackParent</code> will create an new GameObject with a TransformController and parent any number of children tracks to it.</p>"},{"location":"animation/additional-events/#assignplayertotrack","title":"AssignPlayerToTrack","text":"<pre><code>{\n  \"b\": float, // Time in beats.\n  \"t\": \"AssignPlayerToTrack\",\n  \"d\": {\n    \"track\": string, // The track you wish to assign the player to.\n    \"target\": string // (optional) The specific player object you wish to target.\n  }\n}\n</code></pre> <p><code>AssignPlayerToTrack</code> will assign the player a TransformController. Available targets are <code>Root</code>, <code>Head</code>, <code>LeftHand</code>, and <code>RightHand</code>.</p> <p>Warning</p> <p>It is recommended to have a track dedicated to the player, and not use easings in movement. This is VR, non-linear movement or any form of rotation can easily cause motion sickness. To clarify, it is very easy to make people motion sick with player tracks, please use them carefully and sparingly.</p>"},{"location":"animation/additional-events/#chroma","title":"Chroma","text":""},{"location":"animation/additional-events/#animatecomponent","title":"AnimateComponent","text":"<pre><code>{\n  \"b\": float, // Time in beats.\n  \"t\": \"AnimateComponent\",\n  \"d\": {\n    \"track\": string, // The track you want to animate.\n    \"duration\": float, // The length of the event in beats (defaults to 0).\n    \"easing\": string, // An easing for the animation to follow (defaults to easeLinear).\n    \"component name\": { // name of component\n      \"field name\": point definition // name of field on component\n    }\n  }\n}\n</code></pre> <p><code>AnimateComponent</code> allows for animating components. Animating fog demo.</p> <p>Example</p> <p>Lights start off extremely bright and then quickly dim. <pre><code>{\n  \"b\": 15,\n  \"t\": \"AnimateComponent\",\n  \"d\": {\n    \"track\": \"lights\",\n    \"duration\": 5,\n    \"TubeBloomPrePassLight\":\n      {\n          \"colorAlphaMultiplier\": [[10, 0], [0, 1, \"easeInExpo\"]],\n          \"bloomFogIntensityMultiplier\": [[10, 0], [0, 1, \"easeInExpo\"]]\n      }\n  }\n},\n</code></pre></p>"},{"location":"animation/properties/","title":"Properties","text":"<p>These are all the properties than an object can be animated by.</p>"},{"location":"animation/properties/#noodle-extensions","title":"Noodle Extensions","text":""},{"location":"animation/properties/#offsetposition","title":"offsetPosition","text":"<p><code>offsetPosition</code> may be used in both <code>AnimateTrack</code> and <code>AssignPathAnimation</code></p> <p>Describes the position offset of an object. It will continue any normal movement and have this stacked on top of it.</p> <p>Multiple of this property will be added together.</p> <p>Info</p> <p>One unit in <code>offsetPosition</code> is equal to the width of one lane (0.6 meters).</p> <p>Point definition: <code>[x, y, z, time, (optional) easing, (optional) spline]</code></p> Example AnimateTrackAssignPathAnimation <p><pre><code>\"examplePositionPointDef\": [\n  [0, 0, 0, 0],\n  [0, 5, 0, 0.5, \"splineCatmullRom\"],\n  [0, 0, 0, 1, \"splineCatmullRom\"]\n]\n</code></pre> <pre><code>{\n  \"b\": 4,\n  \"t\": \"AnimateTrack\",\n  \"d\": {\n    \"track\": \"firstPositionDemo\",\n    \"duration\": 8,\n    \"offsetPosition\": \"examplePositionPointDef\"\n  }\n}\n</code></pre> </p> <p><pre><code>\"examplePositionPath\": [\n  [0, 0, 0, 0],\n  [0, 5, 0, 0.25, \"splineCatmullRom\"],\n  [0, 0, 0, 0.5, \"splineCatmullRom\"]\n]\n</code></pre> <pre><code>{\n  \"b\": 12,\n  \"t\": \"AssignPathAnimation\",\n  \"d\": {\n    \"track\": \"firstPositionDemo\",\n    \"duration\": 4,\n    \"easing\": \"easeInBounce\",\n    \"offsetPosition\": \"examplePositionPath\"\n  }\n}, {\n  \"b\": 16,\n  \"t\": \"AssignPathAnimation\",\n  \"d\": {\n    \"track\": \"firstPositionDemo\",\n    \"duration\": 4,\n    \"easing\": \"easeOutBounce\"\n    \"offsetPosition\": [\n      [0, 0, 0, 0]\n    ]\n  }\n}\n</code></pre> </p>"},{"location":"animation/properties/#localrotation","title":"localRotation","text":"<p><code>localRotation</code> may be used in both <code>AnimateTrack</code> and <code>AssignPathAnimation</code></p> <p>This property describes the local rotation offset of an object. This means it is rotated with itself as the origin. Uses euler values. Do note that the note spawn effect will be rotated accordlingly.</p> <p>Warning</p> <p>Rotations are internally calculated quaternions to prevent gimbal lock. Rather than representing a set of rotations like euler, quaternions represent an orientation. In other words, <code>[[0, 0, 0, 0], [360, 360, 360, 1]]</code> will have no movement at all, as both points are identical internally.</p> <p>Tip</p> <p>Notes attempting to look towards the player may look strange, you can disable their look with <code>disableNoteLook</code>.</p> <p>Multiple of this property will be added together.</p> <p>Point definition: <code>[pitch, yaw, roll, time, (optional) easing, (optional) spline]</code></p> Example AnimateTrackAssignPathAnimation <p><pre><code>\"localSpinDemoAnimate\": [\n  [0, 0, 0, 0],\n  [90, 0, 0, 0.25],\n  [180, 0, 0, 0.5],\n  [270, 0, 0, 0.75],\n  [360, 0, 0, 1]\n],\n\"localSpinDemoAnimateRev\": [\n  [0, 0, 0, 0],\n  [-90, 0, 0, 0.25],\n  [-180, 0, 0, 0.5],\n  [-270, 0, 0, 0.75],\n  [-360, 0, 0, 1]\n]\n</code></pre> <pre><code>{\n  \"b\": 20,\n  \"t\": \"AnimateTrack\",\n  \"d\": {\n    \"track\": \"localRotationDemo\",\n    \"duration\": 5,\n    \"easing\": \"easeInOutExpo\",\n    \"localRotation\": \"localSpinDemoAnimate\"\n  }\n}, {\n  \"b\": 25,\n  \"t\": \"AnimateTrack\",\n  \"d\": {\n    \"track\": \"localRotationDemo\",\n    \"duration\": 5,\n    \"easing\": \"easeInOutExpo\",\n    \"localRotation\": \"localSpinDemoAnimateRev\"\n  }\n}\n</code></pre> </p> <p><pre><code>\"localSpinDemoPath\": [\n  [0, 0, 0, 0],\n  [0, 0, 90, 0.125],\n  [0, 0, 180, 0.25],\n  [0, 0, 270, 0.375],\n  [0, 0, 360, 0.5]\n]\n</code></pre> <pre><code>{\n  \"b\": 30,\n  \"t\": \"AssignPathAnimation\",\n  \"d\": {\n    \"track\": \"localRotationDemo\",\n    \"localRotation\": \"localSpinDemoPath\"\n  }\n}\n</code></pre> </p>"},{"location":"animation/properties/#offsetworldrotation","title":"offsetWorldRotation","text":"<p><code>offsetWorldRotation</code> may be used in both <code>AnimateTrack</code> and <code>AssignPathAnimation</code></p> <p>This property describes the world rotation offset of an object. This means it is rotated with the world as the origin. Uses euler values. Think of the 360 characteristic.</p> <p>Warning</p> <p>Rotations are internally calculated quaternions to prevent gimbal lock. Rather than representing a set of rotations like euler, quaternions represent an orientation. In other words, <code>[[0, 0, 0, 0], [360, 360, 360, 1]]</code> will have no movement at all, as both points are identical internally.</p> <p>Multiple of this property will be added together.</p> <p>Point definition: <code>[pitch, yaw, roll, time, (optional) easing]</code></p> Example AnimateTrackAssignPathAnimation <p><pre><code>\"RotationPointsAnimate\": [\n  [0, 0, 0, 0],\n  [0, 90, 0, 0.25],\n  [0, 180, 0, 0.5],\n  [0, 270, 0, 0.75],\n  [0, 360, 0, 1]\n]\n</code></pre> <pre><code>// AnimateTrack\n{\n  \"b\": 40,\n  \"t\": \"AnimateTrack\",\n  \"d\":{\n    \"track\": \"RotationDemo\",\n    \"duration\": 10,\n    \"offsetWorldRotation\": \"RotationPointsAnimate\"\n  }\n}\n</code></pre> </p> <p><pre><code>\"RotationPointsPath\": [\n  [0, 0, 0, 0],\n  [0, 45, 0, 0.125, \"splineCatmullRom\"],\n  [0, -45, 0, 0.25, \"splineCatmullRom\"],\n  [0, 22.5, 0, 0.375, \"splineCatmullRom\"],\n  [0, -22.5, 0, 0.5, \"splineCatmullRom\"],\n  [0, 0, 0, 0.625, \"splineCatmullRom\"]\n]\n</code></pre> <pre><code>{\n  \"b\": 50,\n  \"t\": \"AssignPathAnimation\",\n  \"d\": {\n    \"track\": \"RotationDemo\",\n    \"duration\": 5,\n    \"offsetWorldRotation\": \"RotationPointsPath\"\n  }\n}, {\n  \"b\": 55,\n  \"t\": \"AssignPathAnimation\",\n  \"d\": {\n    \"track\": \"RotationDemo\",\n    \"duration\": 5,\n    \"offsetWorldRotation\":[\n      [0, 0, 0, 0]\n    ]\n  }\n}\n</code></pre> </p>"},{"location":"animation/properties/#scale","title":"scale","text":"<p><code>scale</code> may be used in both <code>AnimateTrack</code> and <code>AssignPathAnimation</code></p> <p>Decribes the scale of an object. This will be based off their initial size. A scale of 1 is equal to normal size, anything under is smaller, over is larger.</p> <p>Multiple of this property will be multiplied together.</p> <p>Point definition: <code>[x, y, z, time, (optional) easing, (optional) spline]</code></p> Example AnimateTrackAssignPathAnimation <p><pre><code>\"AnimateTrackScale\": [\n  [1, 1, 1, 0],\n  [0.80, 0.80, 0.80, 0.15, \"easeOutCirc\"],\n  [2, 2, 2, 0.5, \"easeOutBounce\"],\n  [2, 2, 2, 0.6],\n  [2.5, 1, 1, 0.8, \"easeOutExpo\"],\n  [1, 1, 1, 1, \"easeOutBounce\"]\n]\n</code></pre> <pre><code>{\n  \"b\": 165,\n  \"t\": \"AnimateTrack\",\n  \"d\": {\n    \"track\": \"scaleTrack\",\n    \"scale\": \"AnimateTrackScale\",\n    \"duration\": 5\n  }\n}\n</code></pre> </p> <p><pre><code>\"PathScale\": [\n  [1, 1, 1, 0],\n  [4, 0.5, 1, 0.20, \"easeInElastic\"],\n  [1, 1, 1, 0.50, \"easeOutElastic\"]\n]\n</code></pre> <pre><code>{\n  \"b\":175,\n  \"t\":\"AssignPathAnimation\",\n  \"d\":{\n    \"track\":\"scaleTrack\",\n    \"scale\":\"PathScale\"\n  }\n}\n</code></pre> </p>"},{"location":"animation/properties/#dissolve","title":"dissolve","text":"<p><code>dissolve</code> may be used in both <code>AnimateTrack</code> and <code>AssignPathAnimation</code></p> <p>This property controls the dissolve effect on both notes and walls. It's the same effect that happens when things go away upon failing a song. Keep in mind that note bodies and the note arrows have seperate dissolve properties, see <code>dissolveArrow</code></p> <p>Note</p> <p>How this effect looks will depend on the player's \"Bloom Post Process\" effect. Lower graphics settings may instead see the note scaling up from 0, rather than the cutout effect.</p> <p><code>0</code> is fully transparent and <code>1</code> is fully opaque.</p> <p>Multiple of this property will be multiplied together.</p> <p>Point definition: <code>[transparency, time, (optional) easing]</code></p> <p>Tip</p> <p>It is possible to \"disable\" the jump animation when objects cannot be animated.</p> <pre><code>// This note will be invisible during the jump animation.\n// Remember that if you want the note to be invisible for longer,\n// you should use Chroma's spawnEffect to hide the spawn effect.\n{\n  \"b\": 60,\n  \"x\": 1,\n  \"y\": 0,\n  \"c\": 0,\n  \"d\": 1,\n  \"customData\": {\n    \"spawnEffect\": false,\n    \"animation\": {\n      \"dissolve\": [\n        [0, 0],\n        [1, 0],\n      ]\n    }\n  }\n}\n</code></pre> Example AnimateTrackAssignPathAnimation <p><pre><code>// Point Definition\n\"dissolveDemoAnimate\": [\n  [1, 0],\n  [0, 0.25],\n  [0.5, 0.50],\n  [0, 0.75],\n  [1, 1]\n]\n</code></pre> <pre><code>// AnimateTrack\n{\n  \"b\": 60,\n  \"t\": \"AnimateTrack\",\n  \"d\": {\n    \"track\": \"dissolveDemo\",\n    \"duration\": 10,\n    \"dissolve\": \"dissolveDemoAnimate\"\n  }\n}\n</code></pre> </p> <p><pre><code>\"dissolveDemoPath\": [\n  [0, 0],\n  [1, 0.125],\n  [1, 0.30],\n  [0, 0.35]\n]\n</code></pre> <pre><code>// AssignPathAnimation\n{\n  \"b\": 70,\n  \"t\": \"AssignPathAnimation\",\n  \"d\": {\n    \"track\": \"dissolveDemo\",\n    \"dissolve\": \"dissolveDemoPath\"\n  }\n}\n</code></pre> </p>"},{"location":"animation/properties/#dissolvearrow","title":"dissolveArrow","text":"<p><code>dissolveArrow</code> may be used in both <code>AnimateTrack</code> and <code>AssignPathAnimation</code></p> <p>This property controls the dissolve effect on the arrows of notes. Similar to the look of the disappearing notes modifier. This property only affects notes.</p> <p>Multiple of this property will be multiplied together.</p> <p>Point definition: <code>[transparency, time, (optional) easing]</code></p> Example AnimateTrackAssignPathAnimation <p><pre><code>\"dissolveArrowDemoAnimate\": [\n  [1, 0],\n  [0, 1]\n]\n</code></pre> <pre><code>{\n  \"b\": 80,\n  \"t\": \"AnimateTrack\",\n  \"d\": {\n    \"track\": \"dissolveArrowDemo\",\n    \"duration\": 5,\n    \"dissolveArrow\": \"dissolveArrowDemoAnimate\"\n  }\n}, {\n  \"b\": 85,\n  \"t\": \"AnimateTrack\",\n  \"d\": {\n    \"track\": \"dissolveArrowDemo\",\n    \"duration\": 5,\n    \"dissolveArrow\": [\n      [0, 0],\n      [1, 1]\n    ]\n  }\n}\n</code></pre> </p> <p><pre><code>\"dissolveArrowDemoPath\": [\n  [0, 0.10],\n  [1, 0.20],\n  [1, 0.30],\n  [0, 0.35]\n]\n</code></pre> <pre><code>{\n  \"b\": 90,\n  \"t\": \"AssignPathAnimation\",\n  \"d\": {\n    \"track\": \"dissolveArrowDemo\",\n    \"dissolveArrow\": \"dissolveArrowDemoPath\"\n  }\n}\n</code></pre> </p>"},{"location":"animation/properties/#interactable","title":"interactable","text":"<p><code>interactable</code> may be used in both <code>AnimateTrack</code> and <code>AssignPathAnimation</code></p> <p>This property controls whether or not the player can interact with the note/wall.</p> <p><code>interactable</code> either is or isn't, there is no in-between. When great than or equal to <code>1</code>, the object can fully be interacted with. When less than <code>1</code>, the object cannot be interacted with at all.</p> <p>Multiple of this property will be multiplied together.</p> <p>Point definition: <code>[interactable, time, (optional) easing]</code></p> Example <p>This is where I would put my example, IF I HAD ANY!</p>"},{"location":"animation/properties/#definiteposition","title":"definitePosition","text":"<p><code>definitePosition</code> may only be used in <code>AssignPathAnimation</code></p> <p>Describes the definite position of an object. Will completely overwrite the object's default movement. However, this does still take into account x/y and world rotation.</p> <p>An object with with <code>definitePosition</code> will still be offset by the <code>offsetPosition</code> property.</p> <p>Note</p> <p>One unit in <code>definitePosition</code> is equal to the width of one lane (0.6 meters).</p> <p>Point definition: <code>[x, y, z, time, (optional) easing, (optional) spline]</code></p> Example <p><pre><code>\"defPosPath\":[\n  [0, 0, 20, 0],\n  [10, 0, 20, 0.1],\n  [10, 10, 20, 0.2],\n  [0, 10, 20, 0.3],\n  [0, 0, 20, 0.4],\n  [0, 0, 10, 0.5],\n  [-20, 0, 10, 1.0]\n],\n\"defPosNormal\":[\n  [0,0,23,0],\n  [0,0,0,0.5],\n  [0,0,-23,1]\n]\n</code></pre> <pre><code>{\n  \"b\":0,\n  \"t\":\"AssignPathAnimation\",\n  \"d\":{\n    \"track\":\"definitePosDemo\",\n    \"definitePosition\":\"defPosNormal\",\n    \"duration\":0\n  }\n}, {\n  \"b\":132,\n  \"t\":\"AssignPathAnimation\",\n  \"d\":{\n    \"track\":\"definitePosDemo\",\n    \"definitePosition\":\"defPosPath\",\n    \"duration\":3\n  }\n}\n</code></pre> </p>"},{"location":"animation/properties/#time","title":"time","text":"<p><code>time</code> may only be used in <code>AnimateTrack</code></p> <p><code>time</code> is relatively advanced so make sure to have a solid understanding of Noodle Extensions before delving into time. <code>time</code> can only be used in AnimateTrack as it lets you control what point in the note's \"lifespan\" it is at a given time.</p> <pre><code>[\n  [0, 0],\n  [0.2, 0.2],\n  [0.3, 0.4],\n  [0.4, 0.4]\n]\n</code></pre> <p>It is worth noting that every object on one track will get the same time values when animating this property. This means they would suddenly appear to all be at the same point. It is recommended for every object to have its own track when using <code>_time</code></p> <p>Say you want a time AnimateTrack on an object that will make it behave normally for starters. You want the AnimateTrack to start right when the object spawns, meaning <code>_time-halfJumpDurationInBeats</code> of the object. It's duration should be <code>halfJumpJurationInBeats*2</code>. With this, the point definition of</p> <pre><code>[\n  [0, 0],\n  [1, 1]\n]\n</code></pre> <p>would behave as normal.</p> <pre><code>[\n  [0, 0],\n  [0.45, 0.15],\n  [0.15, 0.30],\n  [0.5, 0.5],\n  [1, 1]\n]\n</code></pre> <p>would appear to go forwards, then backwards.</p> <p>Note</p> <p>If you intend to despawn an object using <code>time</code>, obstacles will despawn at a time that is &gt;1 while notes will despawn at a time that is &gt;=1.</p> <p>Warning</p> <p>It is recommended to make sure that real notes still reach the play at their beat time, as this is when the note cut sound effect is timed to play.</p> <p>Multiple of this property will only use the first instance.</p> <p>Point definition: <code>[time, time, (optional) easing]</code></p> Example <p>It is highly recommended you script/automate anything involving time. This is simply showcasing on one note to help visualize. <pre><code>\"SingleNoteTime\": [\n  [0, 0],\n  [0.45, 0.15],\n  [0.15, 0.30],\n  [0.5, 0.5],\n  [1, 1]\n]\n</code></pre> <pre><code>{\n  \"b\": 153,\n  \"t\": \"AnimateTrack\",\n  \"d\": {\n    \"time\": \"SingleNoteTime\",\n    \"duration\": 10,\n    \"track\": \"singleNoteTimeTrack\"\n  }\n}\n</code></pre> </p>"},{"location":"animation/properties/#chroma","title":"Chroma","text":""},{"location":"animation/properties/#color","title":"color","text":"<p><code>color</code> may be used in both <code>AnimateTrack</code> and <code>AssignPathAnimation</code></p> <p>Describes the color of an object. Will override any other color the object may have had.</p> <p>Color is on a scale from 0 - 1, and NOT 0 - 255.</p> <p>Multiple of this property will be multiplied together.</p> <p>Point definition: <code>[red, green, blue, alpha, time, (optional) easing]</code></p> Example AnimateTrackAssignPathAnimation <p><pre><code>\"RightColorWallAnimate\": [\n  [1, 0, 0, 1, 0.2],\n  [0, 1, 0, 1, 0.4],\n  [0, 0, 1, 1, 0.6],\n  [0, 1, 1, 1, 0.8],\n  [1, 1, 1, 1, 1]\n],\n\"LeftColorWallAnimate\": [\n  [1, 0, 0, 0, 0.2],\n  [0, 1, 0, 0, 0.4],\n  [0, 0, 1, 0, 0.6],\n  [0, 1, 1, 0, 0.8],\n  [1, 1, 1, 0, 1]\n]\n</code></pre> <pre><code>{\n  \"b\": 98,\n  \"t\": \"AnimateTrack\",\n  \"d\": {\n    \"track\": \"RightColorWall\",\n    \"color\": \"RightColorWallAnimate\",\n    \"duration\": 10\n  }\n}, {\n  \"b\": 98,\n  \"t\": \"AnimateTrack\",\n  \"d\": {\n    \"track\": \"LeftColorWall\",\n    \"color\": \"LeftColorWallAnimate\",\n    \"duration\": 10\n  }\n}\n</code></pre> </p> <p><pre><code>\"GradientPathOne\": [\n  [1, 0, 0, 0.5, 0.0416],\n  [0, 1, 0, 0.5, 0.0832],\n  [0, 0, 1, 0.5, 0.1248],\n  [1, 0, 0, 0.5, 0.1664],\n  [0, 1, 0, 0.5, 0.208],\n  [0, 0, 1, 0.5, 0.2496],\n  [1, 0, 0, 0.5, 0.2912],\n  [0, 1, 0, 0.5, 0.3328],\n  [0, 0, 1, 0.5, 0.3743],\n  [1, 0, 0, 0.5, 0.416],\n  [0, 1, 0, 0.5, 0.4576],\n  [0, 0, 1, 0.5, 0.4992]\n],\n\"GradientPathTwo\": [\n  [0, 1, 0, 0.5, 0.0416],\n  [0, 0, 1, 0.5, 0.0832],\n  [1, 0, 0, 0.5, 0.1248],\n  [0, 1, 0, 0.5, 0.1664],\n  [0, 0, 1, 0.5, 0.208],\n  [1, 0, 0, 0.5, 0.2496],\n  [0, 1, 0, 0.5, 0.2912],\n  [0, 0, 1, 0.5, 0.3328],\n  [1, 0, 0, 0.5, 0.3743],\n  [0, 1, 0, 0.5, 0.416],\n  [0, 0, 1, 0.5, 0.4576],\n  [1, 0, 0, 0.5, 0.4992]\n]\n</code></pre> <pre><code>{\n  \"b\": 110,\n  \"t\": \"AssignPathAnimation\",\n  \"d\": {\n    \"track\": \"RightColorWallStatic\",\n    \"duration\": 2,\n    \"color\": \"GradientPathOne\"\n  }\n}, {\n  \"b\": 114,\n  \"t\": \"AssignPathAnimation\",\n  \"d\": {\n    \"track\": \"RightColorWallStatic\",\n    \"duration\": 6,\n    \"easing\": \"easeOutElastic\",\n    \"color\": \"GradientPathTwo\"\n  }\n}, {\n  \"b\": 110,\n  \"t\": \"AssignPathAnimation\",\n  \"d\": {\n    \"track\": \"LeftColorWallStatic\",\n    \"duration\": 2,\n    \"color\": \"GradientPathTwo\"\n  }\n}, {\n  \"b\": 114,\n  \"t\": \"AssignPathAnimation\",\n  \"d\": {\n    \"track\": \"LeftColorWallStatic\",\n    \"duration\": 6,\n    \"easing\": \"easeOutElastic\",\n    \"color\": \"GradientPathOne\"\n  }\n}\n</code></pre> </p>"},{"location":"animation/tracks-and-points/","title":"Tracks and Points","text":"<p>Tracks and point definitions are integral to Heck's animation systems and are used for animating anything using Heck.</p>"},{"location":"animation/tracks-and-points/#tracks","title":"Tracks","text":"<p>Tracks are a powerful tool integrated by Heck that allow you to group objects together and control them. Tracks hold information in the form of properties, then anything on the track can use that information to control, for example, their position or rotation.</p> <p><code>track</code> is a string property in the <code>customData</code> of the object you want to give said track to. It can be placed on any object in the <code>obstacles</code>, <code>colorNotes</code>, <code>bombNotes</code>, <code>sliders</code>, or <code>burstSliders</code> arrays. An object can belong to multiple tracks at the same time, and be affected by multiple track animations or path animations concurrently.</p> <p>Example</p> <p>This example will add the note to the <code>ExampleTrack</code> track. These tracks are a way of identifying which objects that the custom events should affect. <pre><code>\"colorNotes\": [\n  {\n    \"t\": 8.0,\n    \"x\": 2,\n    \"y\": 0,\n    \"c\": 1,\n    \"d\": 1,\n    \"customData\": {\n      \"track\": \"ExampleTrack\"\n    }\n  }\n]\n</code></pre></p>"},{"location":"animation/tracks-and-points/#point-definitions","title":"Point Definitions","text":"<p>Point definitions are used to describe what happens over the course of an animation, they are used slightly differently for different properties. They consist of a collection of points over time.</p> <p>Here is an example of one being defined to animate <code>offsetPosition</code>: (See: AnimateTrack)</p> <pre><code>{\n  \"b\": 3.0,\n  \"t\": \"AnimateTrack\",\n  \"d\": {\n    \"track\": \"ZigZagTrack\",\n    \"duration\": 1,\n    \"offsetPosition\": [\n      [0, 0, 0, 0],\n      [1, 0, 0, 0.25],\n      [-1, 0, 0, 0.75],\n      [0, 0, 0, 1]\n    ]\n  }\n}\n</code></pre> <p>A point definition usually follows the pattern of <code>[data, time, optional easing, optional spline]</code>,</p> <ul> <li>Data can be multiple points of data, this part of a point varies per property,</li> <li>Time is a float from 0 - 1, points must be ordered by their time values</li> <li>\"optional easing\" is an optional field, with any easing from easings.net (with the addition of <code>easeLinear</code> and <code>easeStep</code>). This is the easing that will be used in the interpolation from the last point to the one with the easing defined on it.</li> <li>\"optional spline\" is an optional field, with any spline implemented, currently only <code>\"splineCatmullRom\"</code>. It acts like easings, affecting the movement from the last point to the one with the spline on it. Currently only positions and rotations support splines.</li> </ul> Example <p>Splines and easings being used</p> <pre><code>\"offsetPosition\": [\n  [0, 0, 0, 0],\n  [1, 5, 0, 0.5, \"easeInOutSine\"],\n  [6, 0, 0, 0.75, \"splineCatmullRom\"],\n  [5, -2, -1, 1, \"easeOutCubic\", \"splineCatmullRom\"]\n]\n</code></pre> <p>Warning</p> <p>Point definitions are strict in the amount of points you provide them, i.e. you must provide them the exact amount of values they expect. For example, when animating a color, a point must have 5 numbers total, RGBA and time. Any less or any more will cause an error. <pre><code>\"color\": [\n  [0, 0.5, 1, 1, 0], // Valid\n  [1, 5, 3, 0.5], // Will error\n  [6, 0, 0, 5, 6, 0.75] // Will error\n]\n</code></pre></p> <p>Point definitions can also be defined inside the <code>pointDefinitions</code> field of your <code>customData</code>, any point definition defined here can be called via their property name when one would fit.</p> Example <pre><code>{\n  \"version\": \"3.0.0\",\n  \"customData\": {\n    \"pointDefinitions\": {\n      \"ZigZagPosition\": [\n        [0, 0, 0, 0],\n        [1, 0, 0, 0.25],\n        [-1, 0, 0, 0.75],\n        [0, 0, 0, 1]\n      ]\n    },\n    \"customEvents\": [\n      {\n        \"b\": 3.0,\n        \"t\": \"AnimateTrack\",\n        \"d\": {\n          \"track\": \"ZigZagTrack\",\n          \"duration\": 1,\n          \"offsetPosition\": \"ZigZagPosition\"\n        }\n      }\n    ]\n  },\n  \"events\": [],\n  \"notes\": [],\n  \"obstacles\": []\n}\n</code></pre> <p>When a point definition is used, input time values outside of the defined points' times will automatically clamp to the first and last values respectively.</p> Example <p>The scale of this note will be 2x up until 0.5, after which it will begin scaling down to 1x until 0.8, then the note will remain at 1x. <pre><code>{\n  \"t\": 2,\n  \"x\": 1,\n  \"y\": 0,\n  \"c\": 1,\n  \"d\": 0,\n  \"customData\": {\n    \"animation\": {\n      \"scale\": [\n        [2, 2, 2, 0.5],\n        [1, 1, 1, 0.8]\n      ]\n    }\n  }\n}\n</code></pre></p> <p>Tip</p> <p>If you only require one element in your point definition, instead of a list of points, your point definition can just be your point. Heck will automatically add a time of 0 for you. <pre><code>// These are equivalent\n\"offsetPosition\": [[245, 23, 54, 0]]\n\"offsetPosition\": [245, 23, 54]\n</code></pre></p>"},{"location":"animation/tracks-and-points/#path-animation","title":"Path Animation","text":"<p>Path animations define how an object is animated over its own individual lifetime. For path animations, the time value of the point definition is the point each object on the track is at in its individual life span.</p> <p>Meaning a point with time <code>0</code> would be right when the object finishes jumping in, a point with time <code>0.5</code> would be when the object reaches the player, at <code>0.75</code>, walls and notes will begin their despawn animation and start flying away very quickly, and <code>1</code> being right when the object despawns.</p> <p></p> <p>Note</p> <p>Objects cannot be animated while they are in their jumping animation. During that time, they will instead strictly use the first point in the point definition.</p>"},{"location":"animation/tracks-and-points/#individual-path-animations","title":"Individual path animations","text":"<p>Path animations can individual be assigned to an object by adding the <code>animation</code> data in the <code>customData</code>.</p> <p>This will apply a path animation to the single object. Will overwrite any path animation assigned through <code>AssignPathAnimation</code></p> <p>Example</p> <pre><code>{\n  \"b\": 90,\n  \"x\": 1,\n  \"y\": 0,\n  \"c\": 0,\n  \"d\": 1,\n  \"customData\": {\n    \"animation\": {\n      \"offsetPosition\": [\n        [0, 40, 0, 0],\n        [0, 0, 0, 0.2]\n      ]\n    }\n  }\n}\n</code></pre>"},{"location":"animation/tracks-and-points/#events","title":"Events","text":"<p>These custom events are the primary ways of animating.</p>"},{"location":"animation/tracks-and-points/#animatetrack","title":"AnimateTrack","text":"<pre><code>{\n  \"b\": float, // Time in beats.\n  \"t\": \"AnimateTrack\",\n  \"d\": {\n    \"track\": string/string[], // The track(s) you want to animate.\n    \"duration\": float, // The length of the event in beats (defaults to 0).\n    \"easing\": string, // An easing for the animation to follow (defaults to easeLinear).\n    \"property\": point definition, // The property you want to animate.\n    \"repeat\": int // How many times to repeat this event (defaults to 0)\n  }\n}\n</code></pre> <p><code>AnimateTrack</code> will animate the properties of everything on the track at the same time. The animation will go through the point definition over the course of <code>duration</code>.</p> <p>Attempting to animate a property which is already being animated will stop the overwritten <code>AnimateTrack</code>. However, multiple <code>AnimateTrack</code> events may animate separate properties at the same time, i.e. one <code>AnimateTrack</code> could animate position over 10 beats while another <code>AnimateTrack</code> animates rotation over 5 beats.</p> <p>Tip</p> <p>Do not forget an object can be a part of multiple tracks, and therefore multiple <code>AnimateTrack</code> events could affect the same property on a single object by animating multiple tracks.</p> <p>Although not recommended, properties can be set to <code>null</code> to \"erase\" a track's property (This obviously cannot have a duration). This will return that property to as if it was never set at all. This is highly not recommended because it cannot update active objects and can instead be done by setting the property to a default point definition. i.e. <code>[[0,0,0,0]]</code></p> <p>Example</p> <p>All the objects on ZigZagTrack will be offset 1 unit to the right, then offset 1 units to the left, and then finally centered. <pre><code>{\n  \"b\": 3.0,\n  \"t\": \"AnimateTrack\",\n  \"d\": {\n    \"track\": \"ZigZagTrack\",\n    \"duration\": 10,\n    \"offsetPosition\": [\n      [0, 0, 0, 0],\n      [1, 0, 0, 0.25],\n      [-1, 0, 0, 0.75],\n      [0, 0, 0, 1]\n    ]\n  }\n}\n</code></pre></p> <p>Warning</p> <p>The track(s) being affected must exist. That is, the track must have at least one object on it, such as a note or a prefab. If the track does not exist, the event will error. This is true for any event which uses tracks, not just <code>AnimateTrack</code>.</p>"},{"location":"animation/tracks-and-points/#assignpathanimation","title":"AssignPathAnimation","text":"<pre><code>{\n  \"b\": float, // Time in beats.\n  \"t\": \"AssignPathAnimation\",\n  \"d\": {\n    \"track\": string/string[], // The track(s) you want to animate.\n    \"duration\": float, // How long it takes to assign this path animation (defaults to 0).\n    \"easing\": string, // An easing for moving to the path animation (defaults to easeLinear).\n    \"property\": point definition // The property you want to assign the path to.\n  }\n}\n</code></pre> <p><code>AssignPathAnimation</code> will assign a \"path animation\" to all the objects on the track(s).</p> <p>The duration and easing on the event additionally allows you to transition smoothly between paths.</p> <p>Although not recommended, path properties can be set to <code>null</code> to \"erase\" a track's path property. This will return that path property to as if it was never set at all. It is highly not recommended because although usually you can interpolate from one path animation to another using <code>duration</code>, you cannot interpolate from nor to <code>null</code>.</p> <p>Example</p> <p>During their jump animation, the objects will be 40 units high. Once their jump animation is complete, the object will then start descending. <pre><code>{\n  \"b\": 3.0,\n  \"t\": \"AssignPathAnimation\",\n  \"d\": {\n    \"track\": \"DropNotes\",\n    \"offsetPosition\": [\n      [0, 40, 0, 0],\n      [0, 0, 0, 0.2],\n    ]\n  }\n}\n</code></pre></p>"},{"location":"animation/tracks-and-points/#modifiers","title":"Modifiers","text":"<p>Modifiers are added at the end of points to allow you to do basic arithmetic on points. How these modifiers interact can be defined using operations, all of which are done componentwise. These include:</p> <ul> <li><code>opNone</code></li> <li><code>opAdd</code></li> <li><code>opSub</code></li> <li><code>opMul</code></li> <li><code>opDiv</code></li> </ul> <p>Example</p> <p>Modifiers can perform basic arithmetic. <pre><code>{\n  \"b\": -1,\n  \"t\": \"AnimateTrack\",\n  \"d\": {\n    \"track\": \"tutorialnote0\",\n    \"dissolve\": [1.5, [2, \"opMul\"]] // 3\n  }\n}\n</code></pre> A point can also have multiple modifiers and modifiers be chained to specify your order of operations. <pre><code>{\n  \"b\": -1,\n  \"t\": \"AnimateTrack\",\n  \"d\": {\n    \"track\": \"tutorialnote0\",\n    \"dissolve\": [1.5, [2, \"opMul\", [1, \"opSub\"]], [4, \"opAdd\"]] // 5.5\n  }\n}\n</code></pre></p> <p>The true value of modifiers are useful when using base properties which allow referencing some provided values which updates dynamically. This allows for things like following the HMD or setting an object's color to the player's note color. All base properties start with the 'base' prefix.</p> <p>Example</p> <p>The first event takes the color of left hand notes, then multiplies their rgb values by 0.4.</p> <p>The second event just uses the right hand note color.</p> <pre><code>{\n  \"b\": -1,\n  \"t\": \"AnimateTrack\",\n  \"d\": {\n    \"track\": \"tutorialnote0\",\n    \"color\": [\"baseNote0Color\", [ 0.4, 0.4, 0.4, 1, \"opMul\"]]\n  }\n},\n{\n  \"b\": 48,\n  \"t\": \"AnimateTrack\",\n  \"d\": {\n    \"track\": \"tutorialnote1\",\n    \"color\": [\"baseNote1Color\"]\n  }\n}\n</code></pre>"},{"location":"animation/tracks-and-points/#bases","title":"Bases","text":"<p>Base properties represent a set amount of values and are continously updated.</p> <p>Bases will only evaluate when their value is grabbed.</p> <p>Example</p> <pre><code>{\n  \"b\": 5,\n  \"t\": \"AnimateTrack\",\n  \"d\": {\n    \"track\": \"tutorialnote0\",\n    \"duration\": 0, // will snapshot the head's rotation when this event fires.\n    \"localRotation\": [\"baseHeadRotation\"]\n  }\n},\n{\n  \"b\": 5,\n  \"t\": \"AnimateTrack\",\n  \"d\": {\n    \"track\": \"tutorialnote1\",\n    \"duration\": 999, // will continue to follow the head's rotation for 999 beats.\n    \"localRotation\": [\"baseHeadRotation\"]\n  }\n}\n</code></pre> <p>Player Transform</p> <ul> <li><code>baseHeadPosition</code>: [x, y, z]</li> <li><code>baseHeadLocalPosition</code>: [x, y, z]</li> <li><code>baseHeadRotation</code>: [x, y, z]</li> <li><code>baseHeadLocalRotation</code>: [x, y, z]</li> <li><code>baseHeadLocalScale</code>: [x, y, z]</li> <li><code>baseLeftHandPosition</code>: [x, y, z]</li> <li><code>baseLeftHandLocalPosition</code>: [x, y, z]</li> <li><code>baseLeftHandRotation</code>: [x, y, z]</li> <li><code>baseLeftHandLocalRotation</code>: [x, y, z]</li> <li><code>baseLeftHandLocalScale</code>: [x, y, z]</li> <li><code>baseRightHandPosition</code>: [x, y, z]</li> <li><code>baseRightHandLocalPosition</code>: [x, y, z]</li> <li><code>baseRightHandRotation</code>: [x, y, z]</li> <li><code>baseRightHandLocalRotation</code>: [x, y, z]</li> <li><code>baseRightHandLocalScale</code>: [x, y, z]</li> </ul> <p>Color</p> <ul> <li><code>baseNote0Color</code>: [x, y, z, w]</li> <li><code>baseNote1Color</code>: [x, y, z, w]</li> <li><code>baseObstaclesColor</code>: [x, y, z, w]</li> <li><code>baseSaberAColor</code>: [x, y, z, w]</li> <li><code>baseSaberBColor</code>: [x, y, z, w]</li> <li><code>baseEnvironmentColor0</code>: [x, y, z, w]</li> <li><code>baseEnvironmentColor1</code>: [x, y, z, w]</li> <li><code>baseEnvironmentColorW</code>: [x, y, z, w]</li> <li><code>baseEnvironmentColor0Boost</code>: [x, y, z, w]</li> <li><code>baseEnvironmentColor1Boost</code>: [x, y, z, w]</li> <li><code>baseEnvironmentColorWBoost</code>: [x, y, z, w]</li> </ul> <p>Scoring</p> <ul> <li><code>baseCombo</code>: [x]</li> <li><code>baseMultipliedScore</code>: [x]</li> <li><code>baseImmediateMaxPossibleMultipliedScore</code>: [x]</li> <li><code>baseModifiedScore</code>: [x]</li> <li><code>baseImmediateMaxPossibleModifiedScore</code>: [x]</li> <li><code>baseRelativeScore</code>: [x]</li> <li><code>baseMultiplier</code>: [x]</li> <li><code>baseEnergy</code>: [x]</li> <li><code>baseSongTime</code>: [x]</li> <li><code>baseSongLength</code>: [x]</li> </ul> <p>Tip</p> <p>You can get the current normalized song time by doing <code>[\"baseSongTime\", [ \"baseSongLength\", \"opDiv\"]]</code></p>"},{"location":"animation/tracks-and-points/#parts","title":"Parts","text":"<p>You can pick and choose individual components of bases to use by using <code>.xyzw</code>. For example, if you only wanted the <code>z</code> component of the head position, you can use <code>baseHeadPosition.z</code>, or if you wanted the <code>xy</code> components, you can use <code>baseHeadPosition.xy</code>. These values can be unordered and reused, e.g. <code>baseHeadPosition.zzx</code>.</p> <p>Picking individual components of bases also allows using high dimension points in lower dimensional properties.</p> <p>Example</p> <p><code>baseHeadPosition</code> is three dimensional, and <code>dissolve</code> is one dimensional, but by using <code>.x</code>, we get a one dimensional point. <pre><code>{\n  \"b\": 5,\n  \"t\": \"AnimateTrack\",\n  \"d\": {\n    \"track\": \"tutorialnote0\",\n    \"duration\": 999,\n    \"dissolve\": [\"baseHeadPosition.x\"]\n  }\n}\n</code></pre> It is also possible to increase a base's dimension. <pre><code>{\n  \"b\": 5,\n  \"t\": \"AnimateTrack\",\n  \"d\": {\n    \"track\": \"tutorialnote0\",\n    \"duration\": 999,\n    \"offsetPosition\": [\"baseCombo.xxx\"]\n  }\n}\n</code></pre></p> <p>Additionally these parts can be mixed and matched together to make complex points.</p> <p>Example</p> <pre><code>{\n  \"b\": 5,\n  \"t\": \"AnimateTrack\",\n  \"d\": {\n    \"track\": \"tutorialnote0\",\n    \"duration\": 999,\n    \"color\" : [\"baseNote0Color\", [\"baseSongTime\", \"baseHeadPosition.zy\", 1, \"opMul\"]]\n  }\n}\n</code></pre>"},{"location":"animation/tracks-and-points/#smooth","title":"Smooth","text":"<p>Bases can be smoothed between frames by using the <code>.s[number]</code> syntax. Lower values will be smoother than higher values, i.e. <code>baseEnergy.s4</code> will be smoother than <code>baseEnergy.s20</code>. Additionally decimal numbers can be represented by replacing the period with an underscore, i.e. for a smoothness value of 0.4, use <code>.s0_4</code>.</p> <p>Example</p> <p>Smoothly track the HMD. Used to achieve the HUD effect in End Times and Through the Screen. <pre><code>{\n  \"b\": 5,\n  \"t\": \"AnimateTrack\",\n  \"d\": {\n    \"track\": \"hud\",\n    \"duration\": 999,\n    \"position\": [\"baseHeadPosition.s10\"],\n    \"rotation\": [\"baseHeadRotation.s10\"],\n  }\n}\n</code></pre></p> <p>Tip</p> <p>Both parts and smoothing can be used in conjunction with each other, e.g. <code>baseHeadPosition.xzy.s2</code>.</p>"},{"location":"environment/environment/","title":"Environment Enhancements","text":"<p>From simply removing a logo to creating completely hand modelled scenes, Chroma does it all with its environment tools.</p> <p>Tip</p> <p>Set <code>\"PrintEnvironmentEnhancementDebug\": true</code> in the <code>Chroma.json</code> config file to print extra environment enhancement information to your console.</p>"},{"location":"environment/environment/#adding-commands","title":"Adding Commands","text":"<p>Environments are modified by a list of \"commands\" in the <code>\"environment\"</code> array. The commands are ran sequentially at the beginning of the map, and each one will find an object(s) using the id and lookup method, and then set the properties on them.</p> <ul> <li><code>\"customData\"</code> -&gt; <code>\"environment\"</code> (array)<ul> <li><code>\"id\": string</code> The ID to use when looking up the GameObject.</li> <li><code>\"lookupMethod\": \"Regex\"/\"Exact\"/\"Contains\"/\"StartsWith\"/\"EndsWith\"</code> How to use the ID to search. Regex allows for the greatest control, such as future-proofing by using wildcards.</li> <li><code>\"duplicate\": int</code> How many instances of this GameObject to duplicate. This changes the scope of the command and all the following properties will affect the duplicated objects instead.</li> <li><code>\"active\": bool</code> When false, disables the GameObject.</li> <li><code>\"scale\": [x, y, z]</code> (floats) Sets scale of GameObject.</li> <li><code>\"position\": [x, y, z]</code> (floats) Sets position of GameObject.</li> <li><code>\"localPosition\": [x, y, z]</code> (floats) Sets localPosition of GameObject.</li> <li><code>\"rotation\": [x, y, z]</code> (floats) Sets rotation of GameObject.</li> <li><code>\"localRotation\": [x, y, z]</code> (floats) Sets localRotation of GameObject.</li> <li><code>\"track\": string</code> Adds the object to a track, allowing you to animate it. See TransformController</li> <li><code>\"components\": object</code>: See below.</li> </ul> </li> </ul> <p>All of the custom data is stored in the difficulty's json.</p> <p>Example</p> <pre><code>\"version\": \"3.0.0\",\n\"customData\": {\n  \"environment\": [\n    {\n      \"id\": \"^.*\\\\[\\\\d*[13579]\\\\]BigTrackLaneRing\\\\(Clone\\\\)$\",\n      \"lookupMethod\": \"Regex\",\n      \"scale\": [0.1, 0.1, 0.1]\n    }\n  ]\n}\n</code></pre>"},{"location":"environment/environment/#components","title":"Components","text":"<p>Allows you to change fields of components found on game objects.</p> <ul> <li><code>\"environment\"</code> -&gt; <code>\"components\"</code><ul> <li><code>component name</code>: The name of the component to look for.<ul> <li><code>field</code>: The field of the component to affect.</li> </ul> </li> </ul> </li> </ul> <p>Available components:</p> <ul> <li><code>\"ILightWithId\"</code><ul> <li><code>\"lightID\": int</code>: Which ID to assign. For use with the <code>lightID</code> tag for lighting events (Cannot be animated)</li> <li><code>\"type\": int</code>: Which event type to active on. (Cannot be animated)</li> </ul> </li> <li><code>\"BloomFogEnvironment\"</code>: Will always be found on the <code>[0]Environment</code> object.<ul> <li><code>\"attenuation\": float</code>: attenuation is the fog density. logarithmic</li> <li><code>\"offset\": float</code>: offset I have no idea</li> <li><code>\"startY\": float</code>: startY is starting Y of the gradient thing</li> <li><code>\"height\": float</code>: height is the gradient length of the dissolving plane fog</li> </ul> </li> <li><code>\"TubeBloomPrePassLight\"</code><ul> <li><code>\"colorAlphaMultiplier\": float</code></li> <li><code>\"bloomFogIntensityMultiplier\": float</code></li> </ul> </li> </ul> <p>Example</p> <pre><code>{\n  \"id\": \"DragonsEnvironment.[0]Environment\",\n  \"lookupMethod\": \"Exact\",\n  \"components\": {\n    \"BloomFogEnvironment\": {\n      \"attenuation\": 0.2\n    }\n  }\n},\n</code></pre> <p>Additionally, components can be animated using the <code>AnimateComponent</code> custom event.</p>"},{"location":"environment/environment/#transformcontroller","title":"TransformController","text":"<p>Any GameObject assigned a track will automatically be assigned a <code>TransformController</code>. This is a standard Component which will follow <code>position</code>, <code>localPosition</code>, <code>rotation</code>, <code>localRotation</code>, and <code>scale</code> properties on a Track. These are the standard Unity properties on a Transform.</p> <p>Note</p> <p>Because <code>position</code> and <code>localPosition</code> both control position (and similarly for rotation), only one of them can be set. If you attempt to set both at the same time, only <code>localPosition</code> will be set.</p>"},{"location":"environment/environment/#geometry","title":"Geometry","text":"<p>Tired of only being able to move existing objects? Geometry allows you to create your own primitive shapes. Instead of defining <code>\"id\"</code> and <code>\"lookupMethod\"</code>, use <code>\"geometry\"</code>.</p> <pre><code>\"version\": \"3.0.0\",\n\"customData\": {\n  \"environment\": [\n    {\n      \"geometry\": {\n        \"type\": \"Cylinder\",\n        \"material\": {\n          \"color\": [0, 1, 0, 0],\n          \"shader\": \"Standard\",\n        }\n      },\n      \"scale\": [0.1, 0.1, 0.1],\n      \"track\": \"cylindertrack\"\n    }\n  ]\n}\n</code></pre> <ul> <li><code>\"environment\"</code> -&gt; <code>\"geometry\"</code><ul> <li><code>\"type\": string</code> What kind of primitive to create. (Sphere, Capsule, Cylinder, Cube, Plane, Quad, Triangle)</li> <li><code>\"material\": string/object</code> What material to assign the object. Can be referred to by name to reuse, or defined here.</li> <li><code>\"collision\": bool</code> Whether or not the object has a collider. Useful if you want note debris to bounce off.</li> </ul> </li> </ul>"},{"location":"environment/environment/#material","title":"Material","text":"<ul> <li><code>\"color\": [r, g, b, a]</code> (floats)</li> <li><code>\"shader\": \"Standard\"/\"OpaqueLight\"/\"TransparentLight\"</code> What shader to use. OpaqueLight and TransparentLight will create a TubeBloomPrePassLightWithId and TubeBloomPrePassLight and can be controlled by standard lighting events. TransparentLight will be invisible when the light is turned off.</li> <li><code>\"track\": string</code> Assign the material to a track, allowing you to animate the <code>color</code>.</li> <li><code>\"shaderKeywords\": string[]</code> By default, each shader has its default keywords. This allows overwriting the keywords of the shader.</li> </ul> <p>Danger</p> <p>The Standard shader has changed in BS v1.38, setting it to empty shaderKeywords no longer makes it appear full bright. Chroma will automatically add <code>[\"MULTIPLY_REFLECTIONS\", \"FOG\", \"DIFFUSE\", \"REFLECTION_PROBE_BOX_PROJECTION\"]</code> when using an empty array to attempt to keep the Standard shader visible on old maps.</p> <p></p> <p>Tip</p> <p>Every object needs a material, however creating materials can be laggy! The best way to assign materials is to create one initially, and then reuse it whenever you need one. It is recommended you reuse materials whenever possible as it is the most performant way of creating many geometry objects.   <pre><code>\"customData\": {\n  \"materials\": {\n    \"green standard\": {\n      \"color\": [0, 1, 0, 0],\n      \"shader\": \"Standard\"\n    }\n  },\n  \"environment\": [\n    {\n      \"geometry\": {\n        \"type\": \"Cylinder\",\n        \"material\": \"green standard\"\n      },\n      \"scale\": [0.1, 0.1, 0.1],\n    },\n    {\n      \"geometry\": {\n        \"type\": \"Sphere\",\n        \"material\": \"green standard\"\n      },\n      \"position\": [1, 1, 1]\n    }\n  ]\n}\n</code></pre></p>"},{"location":"environment/user-shared/","title":"User Shared Environments","text":"<p>After creating a custom environment, they can be turned into a shareable standalone JSON that can be used on any map like the override environment option. These JSONs must be placed in <code>UserData/Chroma../environments/</code> and must have the file extension <code>.dat</code>. These files will be loaded when you launch Beat Saber and will produce errors in your log when any fail to load.</p> <p>Tip</p> <p>You can also manually reload the files without restarting Beat Saber if you are in Debug Mode (launch parameter <code>-aerolunaisthebestmodder</code>) by pressing <code>Ctrl+E</code>.</p>"},{"location":"environment/user-shared/#finding-custom-chroma-environments","title":"Finding Custom Chroma Environments","text":"<p>Other user's environments can be found in the heck Discord in the #environments channel, feel free to share your own in there as well!</p>"},{"location":"environment/user-shared/#structure","title":"Structure","text":"<pre><code>{\n  \"version\": \"1.0.0\", // must be 1.0.0 to work\n  \"name\": \"my environment!\",\n  \"author\": \"Aeroluna\",\n  \"environmentVersion\": \"0.0.1\", // the version of your custom environment\n  \"environmentName\": \"DragonsEnvironment\", // the name of the base environment to load\n  \"description\": \"check out my cool environment\", // unused for now, but still required\n  \"features\": { // activates certain features for your environment, see below\n    \"forceEffectsFilter\": \"NoEffects\"\n  },\n  \"environment\": [ // your environment!\n    {\n      \"id\": \"^.*\\\\[\\\\d*[13579]\\\\]BigTrackLaneRing\\\\(Clone\\\\)$\",\n      \"lookupMethod\": \"Regex\",\n      \"scale\": [0.1, 0.1, 0.1]\n    }\n  ],\n  \"materials\": { // optional field if you want materials!\n    \"green standard\": {\n      \"color\": [0, 1, 0, 0],\n      \"shader\": \"Standard\"\n    }\n  }\n}\n</code></pre>"},{"location":"environment/user-shared/#features","title":"Features","text":"<ul> <li><code>\"useChromaEvents\": true</code> Forces Chroma to load its features such as rgb lights and light ids.</li> <li><code>\"forceEffectsFilter\": \"AllEffects\"/\"StrobeFilter\"/\"NoEffects\"</code> Forces the effects filter option to a specific preset.</li> <li><code>\"basicBeatmapEvents\": []</code> Loads basic lighting events into the map.</li> </ul>"},{"location":"items/events/","title":"Lighting Events","text":"<p>Not to be confused with custom events, these are vanilla lighting events that have extra data added to them.</p> <p>Example</p> <pre><code>\"basicBeatmapEvents\":[\n  {\n    \"b\": 8.0,\n    \"et\": 2,\n    \"i\": 1,\n    \"f\": 1,\n    \"customData\": {\n      \"color\": [1, 0, 1],\n    }\n  }\n]\n</code></pre>"},{"location":"items/events/#chroma","title":"Chroma","text":""},{"location":"items/events/#standard-lights","title":"Standard Lights","text":"<ul> <li><code>\"lightID\": int</code> Causes event to only affect specified ID. Can be an array.</li> <li><code>\"color\": [r, g, b, a]</code> (floats) Array of RGB values (Alpha is optional and will default to 1 if not specified).</li> <li><code>\"easing\": string</code> Any easing from easings.net (with the addition of easeLinear and easeStep).</li> <li><code>\"lerpType\": string</code> Lerp as <code>HSV</code> or <code>RGB</code>. (Courtesy of The Secrets of Colour Interpolation).</li> </ul>"},{"location":"items/events/#laser-speed","title":"Laser Speed","text":"<ul> <li><code>\"lockRotation\": bool</code> Set to true and the event it is attached to will not reset laser rotations.</li> <li><code>\"speed\": float</code> Identical to just setting value, but allows for decimals. Will overwrite value (Because the game will randomize laser position on anything other than value 0, a small trick you can do is set value to 1 and _preciseSpeed to 0, creating 0 speed lasers with a randomized position).</li> <li><code>\"direction\": int</code> Set the spin direction (0 left lasers spin CCW, 1 left lasers spin CW).</li> </ul>"},{"location":"items/events/#ring-rotation","title":"Ring Rotation","text":"<ul> <li><code>\"nameFilter\": string</code> Causes event to only affect rings with a listed name (e.g. SmallTrackLaneRings, BigTrackLaneRings).</li> <li><code>\"rotation\": float</code> Dictates how far the first ring will spin.</li> <li><code>\"step\": float</code> Dictates how much rotation is added between each ring.</li> <li><code>\"prop\": float</code> Dictates the rate at which rings behind the first one have physics applied to them.  High value makes all rings move simultaneously, low value gives them significant delay.</li> <li><code>\"speed\": float</code> Dictates the speed multiplier of the rings.</li> <li><code>\"direction\": int</code> Direction to spin the rings (1 spins clockwise, 0 spins counter-clockwise).</li> </ul>"},{"location":"items/events/#ring-zoom","title":"Ring Zoom","text":"<ul> <li><code>\"step\": float</code> Dictates how much position offset is added between each ring.</li> <li><code>\"speed\": float</code> Dictates how quickly it will move to its new position.</li> </ul>"},{"location":"items/objects/","title":"Notes/Walls","text":"<p>Noodle Extensions and Chroma provide simple data you can add to any note or wall to change its properties.</p> <p>Example</p> <pre><code>\"colorNotes\": [\n  {\n    \"b\": 8.0,\n    \"x\": 2,\n    \"y\": 0,\n    \"c\": 1,\n    \"d\": 1,\n    \"customData\": {\n      \"coordinates\": [5.2, -1.3]\n    }\n  }\n]\n</code></pre> <p>Info</p> <p>Internally, bombs are treated nearly identically to notes, and as such, bombs will be considered notes henceforth.</p>"},{"location":"items/objects/#heck","title":"Heck","text":""},{"location":"items/objects/#all-objects","title":"All Objects","text":"<ul> <li><code>\"track\": string/string[]</code> A single track or list of tracks that an object belongs to. Commonly used for animating groups of objects. Does nothing by itself. See Tracks and Points.</li> </ul>"},{"location":"items/objects/#noodle-extensions","title":"Noodle Extensions","text":""},{"location":"items/objects/#fake-objects","title":"Fake Objects","text":"<p>If you wish to create fake notes (notes that do not show up in the note count and not count towards score in any way), you must place them in a separate array within <code>customData</code>. These arrays are called <code>fakeColorNotes</code>, <code>fakeBombNotes</code>, <code>fakeObstacles</code> and <code>fakeBurstSliders</code>.</p> <p>Example</p> <pre><code>\"customData\":{\n  \"fakeColorNotes\": [\n    {\n      \"b\": 15,\n      \"x\": 0,\n      \"y\": 1,\n      \"c\": 0,\n      \"d\": 0\n    }\n  ]\n}\n</code></pre>"},{"location":"items/objects/#all-objects_1","title":"All Objects","text":"<ul> <li><code>\"coordinates\": [x, y]</code> (floats) Should be self explanatory. Will override <code>x</code> and <code>y</code> NOTE: All positions are based off the Beatwalls system.</li> </ul> <p>Note</p> <p>When sorting your notes, e.g. in a map parsing script, sort by <code>coordinates</code>, not <code>x</code> (line index) and <code>y</code> (line layer).</p> <ul> <li><code>\"worldRotation\": [x, y, z]</code> (floats) Also known as \"world rotation\". Think the 360Degree Characteristic but way more options. This field can also be just a single float (<code>\"worldRotation\": 90</code>) and it will be interpreted as [0, x, 0] (<code>\"worldRotation\": [0, 90, 0]</code>). [0, 0, 0] will always be the initial position the player is facing at the beginning of the song.</li> <li><code>\"localRotation\": [x, y, z]</code> (floats) Allows you to rotate the object. This won't affect the direction it spawns from or the path it takes. The origin for walls is the front bottom center, as illustrated by spooky.</li> <li><code>\"scale\": [x, y, z]</code> (floats) Sets the scale of the object. This will affect the hitboxes. Because this directly sets the object's transform's scale, it will not correctly scale an obstacle's frame.</li> <li><code>\"noteJumpMovementSpeed\": float</code> Set the NJS of an individual object.</li> <li><code>\"noteJumpStartBeatOffset\": float</code> Set the spawn offset of an individual object.</li> <li><code>\"uninteractable\": bool</code> When true, the note/wall cannot be interacted with. This means notes cannot be cut and walls will not interact with sabers/putting your head in the wall. Notes will still count towards your score.</li> </ul>"},{"location":"items/objects/#notes","title":"Notes","text":"<ul> <li><code>\"flip\": [flip line index, flip jump]</code> (floats) Flip notes from an initial spawn position to its true position. PREVIEW (Map by AaltopahWi). Flip line index is the initial <code>x</code> the note will spawn at and flip jump is how high (or low) the note will jump up (or down) when flipping to its true position. Base game behavior will set one note's flip jump to -1 and the other to 1.</li> <li><code>\"disableNoteGravity\": bool</code> When true, notes will no longer do their animation where they float up.</li> <li><code>\"disableNoteLook\": bool</code> When true, notes will no longer rotate towards the player.</li> <li><code>\"disableBadCutDirection\": bool</code> When true, the note cannot be cut from wrong direction.</li> <li><code>\"disableBadCutSpeed\": bool</code> When true, the note cannot be cut with insufficient speed.</li> <li><code>\"disableBadCutSaberType\": bool</code> When true, the note cannot be cut with the wrong saber.</li> <li><code>\"link\": string</code> When cut, all notes with the same link string will also be cut.</li> </ul>"},{"location":"items/objects/#obstacles","title":"Obstacles","text":"<ul> <li><code>\"size\": [w, h, l]</code> (floats) Width, height and length of the wall. <code>\"size\": [1, 1, 1]</code> will be perfectly square. While <code>d</code> (duration) will still control the lifetime, the length of the wall will be controlled by <code>size</code> instead.</li> </ul>"},{"location":"items/objects/#sliders","title":"Sliders","text":"<ul> <li><code>\"disableNoteGravity\": bool</code> See above.</li> <li><code>\"tailCoordinates\": [x, y]</code> (floats) <code>coordinates</code>, but for the tail.</li> </ul> <p>Tip</p> <p><code>coordinate</code>, <code>scale</code>, <code>flip</code>, <code>size</code>, and <code>tailCoordinates</code> do not require all values to be set, and will use default values if null or missing.</p> \"null\" valueMissing value <pre><code>\"coordinates\": [null, 0] // will use the vanilla \"x\" instead\n</code></pre> <pre><code>\"coordinates\": [2] // will use the vanilla \"y\" instead\n</code></pre>"},{"location":"items/objects/#chroma","title":"Chroma","text":""},{"location":"items/objects/#all-objects_2","title":"All Objects","text":"<ul> <li><code>\"color\": [r, g, b, a]</code> (floats) Array of RGB values (Alpha is optional and will default to 1 if not specified).</li> </ul> <p>Note</p> <p>All RGBA values are on a 0-1 scale, not a 0-255 scale.</p>"},{"location":"items/objects/#notes_1","title":"Notes","text":"<ul> <li><code>\"spawnEffect\": bool</code> Set to false and the note spawn effect will be hidden. True and the note spawn effect will spawn regardless of player setting.</li> <li><code>\"disableNoteDebris\": bool</code> When true, cutting the note spawns will not debris.</li> </ul>"},{"location":"vivify/events/","title":"Events","text":"<p>Custom events added by Vivify.</p>"},{"location":"vivify/events/#materials","title":"Materials","text":""},{"location":"vivify/events/#property-types","title":"Property Types","text":"<ul> <li>Texture: Must be a string that is a direct path file to a texture.</li> <li>Float: May either be a direct value (<code>\"value\": 10.4</code>) or a point definition (<code>\"value\": [[0,0], [10, 1]]</code>).</li> <li>Color: May either be an RGBA array (<code>\"value\": [0, 1, 0, (optional) 1]</code>) or a point definition (<code>\"value\": [1, 0, 0, 0, 0.2], [0, 0, 1, 0, 0.6]</code>).</li> <li>Vector: May either be an array (<code>\"value\": [0, 1, 0, 1]</code>) or a point definition (<code>\"value\": [1, 0, 0, 0, 0.2], [0, 0, 1, 0, 0.6]</code>).</li> <li>Keyword: May either be a direct value (<code>\"value\": true</code>) or a point definition (<code>\"value\": [[0,0], [1, 1]]</code>) where values equal to or greater than 1 will enable the keyword.</li> </ul> <p>Example</p> <pre><code>{\n  \"b\": 3.0,\n  \"t\": \"SetMaterialProperty\",\n  \"d\": {\n    \"asset\": \"assets/screens/glitchmat.mat\",\n    \"duration\": 8,\n    \"properties\": [{\n      \"id\": \"_Juice\",\n      \"type\": \"Float\",\n      \"value\": [\n        [0.02, 0],\n        [0.04, 0.1875, \"easeStep\"],\n        [0.06, 0.375, \"easeStep\"],\n        [0.08, 0.5, \"easeStep\"],\n        [0.1, 0.625, \"easeStep\"],\n        [0.12, 0.75, \"easeStep\"]\n      ]\n    }]\n  }\n}\n</code></pre>"},{"location":"vivify/events/#setmaterialproperty","title":"SetMaterialProperty","text":"<pre><code>{\n  \"b\": float, // Time in beats.\n  \"t\": \"SetMaterialProperty\",\n  \"d\": {\n    \"asset\": string, // File path to the desired material.\n    \"duration\": float, // The length of the event in beats. Defaults to 0.\n    \"easing\": string, // An easing for the animation to follow. Defaults to \"easeLinear\".\n    \"properties\": [{\n      \"id\": string, // Name of the property on the material.\n      \"type\": string, // Type of the property (Texture, Float, Color, Vector, Keyword).\n      \"value\": value/point definition // What to set the property to, type varies depending on property type.\n    }]\n  }\n}\n</code></pre> <p>Allows setting material properties, e.g. Texture, Float, Color, Vector, Keyword.</p>"},{"location":"vivify/events/#setglobalproperty","title":"SetGlobalProperty","text":"<pre><code>{\n  \"b\": float, // Time in beats.\n  \"t\": \"SetGlobalProperty\",\n  \"d\": {\n    \"duration\": float, // The length of the event in beats. Defaults to 0.\n    \"easing\": string, // An easing for the animation to follow. Defaults to \"easeLinear\".\n    \"properties\": [{\n      \"id\": string, // Name of the property.\n      \"type\": string, // Type of the property (Texture, Float, Color, Vector, Keyword).\n      \"value\": value/point definition // What to set the property to, type varies depending on property type.\n    }]\n  }\n}\n</code></pre> <p>Allows setting global shader properties, e.g. Texture, Float, Color, Vector, Keyword.</p>"},{"location":"vivify/events/#blit","title":"Blit","text":"<pre><code>{\n  \"b\": float, // Time in beats.\n  \"t\": \"Blit\",\n  \"d\": {\n    \"asset\": string, // (Optional) File path to the desired material. If missing, will just copy from source to destination without anything special.\n    \"priority\": int, // (Optional) Which order to run current active post processing effects. Higher priority will run first. Default = 0\n    \"pass\": int, // (Optional) Which pass in the shader to use. Will use all passes if not defined.\n    \"order\": string, // (Optional) BeforeMainEffect, AfterMainEffect. Whether to activate before the main bloom effect or after. Defaults fo AfterMainEffect\n    \"source\": string, // (Optional) Which texture to pass to the shader as \"_MainTex\". \"_Main\" is reserved for the camera. Default = \"_Main\"\n    \"destination\": string, // (Optional) Which render texture to save to. Can be an array. \"_Main\" is reserved for the camera. Default = \"_Main\"\n    \"duration\": float, // (Optional) How long will this material be applied. Defaults to 0\n    \"easing\": string, // (Optional) See SetMaterialProperty.\n    \"properties\": ? // (Optional) See SetMaterialProperty.\n  }\n}\n</code></pre> <p>Blit a texture to another texture using a material. A duration of 0 will run for exactly one frame. If a destination is the same as source, a temporary render texture will be created as a buffer.</p> <p>This event allows you to call a SetMaterialProperty from within.</p> <p>Example</p> <pre><code>{\n  \"b\": 73.0,\n  \"t\": \"Blit\",\n  \"d\": {\n    \"asset\": \"assets/shaders/tvdistortmat.mat\",\n    \"duration\": 32,\n    \"properties\": [\n      {\n        \"id\": \"_Juice\",\n        \"type\": \"Float\",\n        \"value\": 0.2\n      }\n    ]\n  }\n}\n</code></pre>"},{"location":"vivify/events/#camera","title":"Camera","text":""},{"location":"vivify/events/#createcamera","title":"CreateCamera","text":"<pre><code>{\n  \"b\": float, // Time in beats.\n  \"t\": \"CreateCamera\",\n  \"d\": {\n    \"id\": string, // Id of the camera.\n    \"texture\": string, // (Optional) Will render to a new texture set to this key.\n    \"depthTexture\": string, // (Optional) Renders just the depth to this texture.\n    \"properties\": ? // (Optional) See SetCameraProperty\n  }\n}\n</code></pre> <p>Creates an additional camera that will render to the desired texture. Useful for creating a secondary texture where a certain track is culled.</p> <p>Danger</p> <p><code>CreateCamera</code> has a significant performance increase as each camera must render your scene again. Be careful about using this event and use <code>DestroyObject</code> to destroy the cameras after using them.</p> <p>Example</p> <p>Example where notes are not rendered on the right side of the screen.</p> JSONShader <pre><code>{\n  \"b\": 0.0,\n  \"t\": \"CreateCamera\",\n  \"d\": {\n    \"id\": \"NotesCam\",\n    \"texture\": \"_Notes\",\n    \"depthTexture\": \"_Notes_Depth\",\n    \"properties\": {\n      \"culling\": {\n        \"track\": \"allnotes\",\n        \"whitelist\": true,\n      },\n      \"depthTextureMode\": [\"Depth\"]\n    }\n  }\n}\n</code></pre> <pre><code>UNITY_DECLARE_SCREENSPACE_TEXTURE(_Notes);\n\nfixed4 frag(v2f i) : SV_Target\n{\n  UNITY_SETUP_STEREO_EYE_INDEX_POST_VERTEX(i);\n  if (i.uv.x &gt; 0.5)\n  {\n    return UNITY_SAMPLE_SCREENSPACE_TEXTURE(_Notes, UnityStereoTransformScreenSpaceTex(i.uv));\n  }\n  else {\n    return UNITY_SAMPLE_SCREENSPACE_TEXTURE(_MainTex, UnityStereoTransformScreenSpaceTex(i.uv));\n  }\n}\n</code></pre>"},{"location":"vivify/events/#setcameraproperty","title":"SetCameraProperty","text":"<pre><code>{\n  \"b\": float, // Time in beats.\n  \"t\": \"SetCameraProperty\",\n  \"d\": {\n    \"id\": string, // (Optional) Id of camera to affect. Default to \"_Main\".\n    \"properties\": {\n      \"depthTextureMode\": [], // (Optional) Sets the depth texture mode on the camera. Can be [Depth, DepthNormals, MotionVectors].\n      \"clearFlags\": string, // (Optional) Can be [Skybox, SolidColor, Depth, Nothing]. See https://docs.unity3d.com/ScriptReference/CameraClearFlags.html\n      \"backgroundColor\": [], // (Optional) [R, G, B, (Optional) A] Color to clear screen with. Only used with SolidColor clear flag.\n      \"culling\": { // (Optional) Sets a culling mask where the selected tracks are culled\n          \"track\": string/string[], // Name(s) of your track(s). Everything on the track(s) will be added to this mask.\n          \"whitelist\": bool // (Optional) When true, will cull everything but the selected tracks. Defaults to false.\n      },\n      \"bloomPrePass\": bool, // (Optional) Enable or disable the bloom pre pass effect.\n      \"mainEffect\": bool // (Optional) Enable or disable the main bloom effect.\n    }\n  }\n}\n</code></pre> <p>Used to set properties on the main camera or cameras created through <code>CreateCamera</code> Setting any field to <code>null</code> will return it to its default. Remember to clear the <code>depthTextureMode</code> to <code>null</code> after you are done using it as rendering a depth texture can impact performance. See Output a depth texture from a camera for more info.</p> <p>Note</p> <p>If the player has the Smoke option enabled, the <code>depthTextureMode</code> will always have <code>Depth</code>.</p>"},{"location":"vivify/events/#createscreentexture","title":"CreateScreenTexture","text":"<pre><code>{\n  \"b\": float, // Time in beats.\n  \"t\": \"CreateScreenTexture\",\n  \"d\": {\n    \"id\": string, // Name of the texture\n    \"xRatio\": float, // (Optional) Number to divide width by, i.e. on a 1920x1080 screen, an xRatio of 2 will give you a 960x1080 texture.\n    \"yRatio\": float, // (Optional) Number to divide height by.\n    \"width\": int, // (Optional) Exact width for the texture.\n    \"height\": int, // (Optional) Exact height for the texture.\n    \"colorFormat\": string, // (Optional) https://docs.unity3d.com/ScriptReference/RenderTextureFormat.html\n    \"filterMode\": string // (Optional) https://docs.unity3d.com/ScriptReference/FilterMode.html\n  }\n}\n</code></pre> <p>Declares a RenderTexture to be used anywhere. They are set as a global variable and can be accessed by declaring a sampler named what you put in \"id\".</p> <p>Example</p> <p>Here we declare a texture called \"snapshot\", capture a single frame at 78.0, then store it in our new render texture. Lastly we destroy the texture (See DestroyObject) after we are done with it to free up any memory it was taking. (Realistically, won't provide noticeable boost to performance, but it can't hurt.) <pre><code>{\n  \"b\": 70.0,\n  \"t\": \"CreateScreenTexture\",\n  \"d\": {\n    \"id\": \"snapshot\"\n  }\n},\n{\n  \"b\": 78.0,\n  \"t\": \"Blit\",\n  \"d\": {\n    \"destination\": \"snapshot\"\n  }\n},\n{\n  \"b\": 120.0,\n  \"t\": \"DestroyObject\",\n  \"d\": {\n    \"id\": \"snapshot\"\n  }\n}\n</code></pre></p>"},{"location":"vivify/events/#instantiateprefab","title":"InstantiatePrefab","text":"<pre><code>{\n  \"b\": float, // Time in beats.\n  \"t\": \"InstantiatePrefab\",\n  \"d\": {\n    \"asset\": string, // File path to the desired prefab.\n    \"id\": string, // (Optional) Unique id for referencing prefab later. Random id will be given by default.\n    \"track\": string, // (Optional) Track to animate prefab transform.\n    \"position\": vector3, // (Optional) Set position.\n    \"localPosition\": vector3, // (Optional) Set localPosition.\n    \"rotation\": vector3, // (Optional) Set rotation (in euler angles).\n    \"localRotation\": vector3, // (Optional) Set localRotation (in euler angles).\n    \"scale\": vector3 //(Optional) Set scale.\n  }\n}\n</code></pre> <p>Instantiates a prefab in the scene. If left-handed option is enabled, then the position, rotation, and scale will be mirrored.</p>"},{"location":"vivify/events/#destroyobject","title":"DestroyObject","text":"<pre><code>{\n  \"b\": float, // Time in beats.\n  \"t\": \"DestroyObject\",\n  \"d\": {\n    \"id\": string/string[], // Id(s) of object to destroy.\n  }\n}\n</code></pre> <p>Destroys an object in the scene. Can be a prefab, camera, or texture id.</p> <p>It is important to destroy any cameras created through <code>CreateCamera</code> because the scene will have to be rendered again for each active camera.</p>"},{"location":"vivify/events/#setanimatorproperty","title":"SetAnimatorProperty","text":"<pre><code>{\n  \"b\": float, // Time in beats.\n  \"t\": \"SetAnimatorProperty\",\n  \"d\": {\n    \"id\": string, // Id assigned to prefab.\n    \"duration\": float, // (Optional) The length of the event in beats. Defaults to 0.\n    \"easing\": string, // (Optional) An easing for the animation to follow. Defaults to \"easeLinear\".\n    \"properties\": [{\n      \"id\": string, // Name of the property.\n      \"type\": string, // Type of the property (Bool, Float, Trigger).\n      \"value\": value/point definition // What to set the property to, type varies depending on property type.\n    }]\n  }\n}\n</code></pre> <p>Allows setting animator properties. This will search the prefab for all Animator components.</p> <p>Property types:</p> <ul> <li>Bool: May either be a direct value (<code>\"value\": true</code>) or a point definition (<code>\"value\": [[0,0], [1, 1]]</code>). Any value greater than or equal to 1 is true.</li> <li>Float: May either be a direct value (<code>\"value\": 10.4</code>) or a point definition (<code>\"value\": [[0,0], [10, 1]]</code>).</li> <li>Integer: May either be a direct value (<code>\"value\": 10</code>) or a point definition (<code>\"value\": [[0,0], [10, 1]]</code>). Value will be rounded.</li> <li>Trigger: Must be <code>true</code> to set trigger or <code>false</code> to reset trigger. Can not be a point definition.</li> </ul>"},{"location":"vivify/events/#assignobjectprefab","title":"AssignObjectPrefab","text":"<pre><code>{\n  \"b\": float, // Time in beats.\n  \"t\": \"AssignObjectPrefab\",\n  \"d\": {\n    \"loadMode\": string, // (Optional) How to load the asset (Single, Additive).\n    \"object\": {} // See below\n  }\n}\n</code></pre> <p>Assigns prefabs to a specific object. Setting any asset to <code>null</code> is equivalent to resetting to the default model. Most objects will have their per-instance properties set automatically (See section \"Adding per-instance properties to GPU instancing shaders\" at Creating shaders that support GPU instancing).</p> <ul> <li><code>\"loadMode\": Single/Additive</code><ul> <li><code>Single</code>: Clears all loaded prefabs on the object and adds a prefab</li> <li><code>Additive</code>: Adds a prefab to the currently loaded prefabs.</li> </ul> </li> <li><code>\"colorNotes\"</code>:<ul> <li><code>\"track\": string</code> Only notes on this track(s) will be affected.</li> <li><code>\"asset\": string</code> (Optional) File path to the desired prefab. Only applies to directional notes. Sets properties <code>_Color</code>, <code>_Cutout</code>, and <code>_CutoutTexOffset</code>.</li> <li><code>\"anyDirectionAsset\": string</code> (Optional) Only applies to dot notes. Sets same properties as directional notes.</li> <li><code>\"debrisAsset\": string</code> (Optional) Applies to cut debris. Sets properties <code>_Color</code>, <code>_Cutout</code>, <code>_CutPlane</code>, and <code>_CutoutTexOffset</code>.</li> </ul> </li> <li><code>\"burstSliders\"</code>:<ul> <li><code>\"track\": string</code> See above.</li> <li><code>\"asset\": string</code> (Optional) See above.</li> <li><code>\"debrisAsset\": string</code> (Optional) See above.</li> </ul> </li> <li><code>\"burstSliderElements\"</code>:<ul> <li><code>\"track\": string</code> See above.</li> <li><code>\"asset\": string</code> (Optional) See above.</li> <li><code>\"debrisAsset\": string</code> (Optional) See above.</li> </ul> </li> <li><code>\"bombNotes\"</code>:<ul> <li><code>\"track\": string</code> See above.</li> <li><code>\"asset\": string</code> (Optional) See above.</li> </ul> </li> <li><code>\"saber\"</code>:<ul> <li><code>\"type\": string</code> Which saber to affect. <code>Left</code>, <code>Right</code> or <code>Both</code>.</li> <li><code>\"asset\": string</code> (Optional) File path to the desired prefab. Sets property <code>_Color</code>.</li> <li><code>\"trailAsset\": string</code> (Optional) File path to the material to replace the trail. Sets property <code>_Color</code> and sets vertex colors for a gradient.</li> <li><code>\"trailTopPos\": vector3</code> (Optional) Vector3 position of the top of the trail. Defaults to [0, 0, 1]</li> <li><code>\"trailBottomPos\": vector3</code> (Optional) Vector3 position of the bottom of the trail. Defaults to [0, 0, 0]</li> <li><code>\"trailDuration\": float</code> (Optional) Age of most distant segment of trail. Defaults to 0.4</li> <li><code>\"trailSamplingFrequency\": int</code> (Optional) Saber position snapshots taken per second. Defaults to 50</li> <li><code>\"trailGranularity\": int</code> (Optional) Segments count in final trail mesh. Defaults to 60</li> </ul> </li> </ul> <p>Example</p> <p>Adds a cool particle system to your sabers! <pre><code>{\n  \"b\": 70.0,\n  \"t\": \"AssignObjectPrefab\",\n  \"d\": {\n    \"loadMode\": \"Additive\",\n    \"saber\": {\n      \"type\": \"Both\",\n      \"asset\": \"assets/path/to/cool/particlesystem.prefab\"\n    }\n  }\n}\n</code></pre></p>"},{"location":"vivify/events/#setrenderingsettings","title":"SetRenderingSettings","text":"<pre><code>{\n  \"b\": float, // Time in beats.\n  \"t\": \"SetRenderingSettings\",\n  \"d\": {\n    \"duration\": float, // (Optional) The length of the event in beats. Defaults to 0.\n    \"easing\": string, // (Optional) An easing for the animation to follow. Defaults to \"easeLinear\".\n    \"category\": {\n        \"property\": value/point definition // The setting to set\n    }\n  }\n}\n</code></pre> <p>Allows changing most Unity rendering or quality settings.</p> <p>Property does not have to be a point definition. When enabling a render setting with a performance cost, remember to disable it after you no longer need it to gain performance back.</p> <p>Current provided settings:</p> <ul> <li> <p><code>\"renderSettings\"</code> RenderSettings</p> <ul> <li><code>\"ambientEquatorColor\": color</code></li> <li><code>\"ambientGroundColor\": color</code></li> <li><code>\"ambientIntensity\": float</code></li> <li><code>\"ambientLight\": color</code></li> <li><code>\"ambientMode\": 0/1/3/4</code> Skybox, Trilight, Flat, Custom</li> <li><code>\"ambientSkyColor\": color</code></li> <li><code>\"defaultReflectionMode\": 0/1</code> Skybox, Custom</li> <li><code>\"defaultReflectionResolution\": int</code></li> <li><code>\"flareFadeSpeed\": float</code></li> <li><code>\"flareStrength\": float</code></li> <li><code>\"fog\": 0/1</code> Bool</li> <li><code>\"fogColor\": color</code></li> <li><code>\"fogDensity\": float</code></li> <li><code>\"fogEndDistance\": float</code></li> <li><code>\"fogMode\": 1/2/3</code> Linear, Exponential, ExponentialSquared</li> <li><code>\"fogEndDistance\": float</code></li> <li><code>\"haloStrength\": float</code></li> <li><code>\"reflectionBounces\": int</code></li> <li><code>\"reflectionIntensity\": float</code></li> <li><code>\"skybox\": string</code> File path to a material</li> <li><code>\"subtractiveShadowColor\": color</code></li> <li><code>\"sun\": string</code> Id from InstantiatePrefab event, will find the first directional light on the top level GameObject</li> </ul> </li> <li> <p><code>\"qualitySettings\"</code>: QualitySettings</p> <ul> <li><code>\"anisotropicFiltering\": 0/1/2</code> Disable, Enable, ForceEnable.</li> <li><code>\"antiAliasing\": 0/2/4/8</code></li> <li><code>\"pixelLightCount\": int</code></li> <li><code>\"realtimeReflectionProbes\": 0/1</code> Bool</li> <li><code>\"shadowCascades\": 0/2/4</code></li> <li><code>\"shadowDistance\": float</code></li> <li><code>\"shadowmaskMode\": 0/1</code> Shadowmask, DistanceShadowmask</li> <li><code>\"shadowNearPlaneOffset\": float</code></li> <li><code>\"shadowProjection\": 0/1</code> CloseFit, StableFit</li> <li><code>\"shadowResolution\": 0/1/2/3</code> Low, Medium, High, VeryHigh.</li> <li><code>\"shadows\": 0/1/2</code> Disable, HardOnly, All.</li> <li><code>\"softParticles\": 0/1</code> Bool</li> </ul> </li> <li> <p><code>\"xrSettings\"</code>: XRSettings WARNING: Only works on 2019 versions.</p> <ul> <li><code>\"useOcclusionMesh\": 0/1</code> Bool</li> </ul> </li> </ul> <p>Example</p> <pre><code>{\n  \"b\": 70.0,\n  \"t\": \"SetRenderingSettings\",\n  \"d\": {\n    \"qualitySettings\": {\n      \"ambientLight\": [0, 0, 0, 0]\n    }\n  }\n}\n</code></pre>"},{"location":"vivify/getting-started-with-vivify/","title":"Getting Started with Vivify","text":"<p>Bring your map to life.</p> <p>Note</p> <p>As a reminder, you MUST add \"Vivify\" as a requirement to your map to activate Vivify. Additionally, Vivify will only load on v3 maps.</p>"},{"location":"vivify/getting-started-with-vivify/#setting-up-unity","title":"Setting up Unity","text":"<p>First, you should download the Unity Hub. Beat Saber 1.29.1 uses version 2019.4.28f and Beat Saber 1.30.0+ uses 2021.3.16f1. For maximum compatibility, you should use 2019.4.28f found in the archive and use Swifter's VivifyTemplate to setup your project and build your bundles.</p> <p>Warning</p> <p>Due to changes in Unity between versions, 2019 bundles will have non-functioning shader keywords in 2021. VivifyTemplate runs an included script by nicoco007 that will automatically fix these keywords whenever you build using it.</p> <p>Make sure you have <code>Virtual Reality Supported</code> enabled in your project and your stereo rendering mode is set to <code>Single Pass</code>. (Edit &gt; Project Settings &gt; Player &gt; XR Settings &gt; Deprecated Settings &gt; Virtual Reality Supported). VivifyTemplate will do this for you.</p>"},{"location":"vivify/getting-started-with-vivify/#writing-vr-shaders","title":"Writing VR shaders","text":"<p>Beat Saber v1.29.1 uses Single Pass Stereo rendering (See Single Pass Stereo rendering for more info). Use the unity built-in function <code>UnityStereoTransformScreenSpaceTex</code> to fix your shaders in vr.</p> <pre><code>sampler2D _MainTex;\n\nfixed4 frag (v2f i) : SV_Target\n{\n  return tex2D(_MainTex, UnityStereoTransformScreenSpaceTex(i.uv));\n}\n</code></pre> <p>Beat Saber v1.34.2+ uses Single Pass Instanced rendering. Any incompatible shaders will only appear in the left eye. To make your shader compatible with this vr rendering method, add instancing support to your shader. See Single-pass instanced rendering and custom shaders for how to add instancing support. Look under \"Post-Processing shaders\" to see how to sample a screen space texture.</p> <p>Tip</p> <p>There are many commonly used structs/functions in UnityCG.cginc. As a few examples, <code>appdata_base</code>, <code>appdata_img</code>, <code>appdata_full</code>, and <code>v2f_img</code> can usually be used instead of writing your own structs and since most image effect shaders use the same vertex function, the include file has a <code>vert_img</code> that can be used with <code>#pragma vertex vert_img</code>.</p> Example BeforeAfter <pre><code>#include \"UnityCG.cginc\"\n\n#pragma vertex vert\n#pragma fragment frag\n\nUNITY_DECLARE_SCREENSPACE_TEXTURE(_MainTex);\n\nstruct appdata {\n  float4 vertex : POSITION;\n  float2 texcoord : TEXCOORD0;\n  UNITY_VERTEX_INPUT_INSTANCE_ID\n};\n\nstruct v2f\n{\n  float4 pos : SV_POSITION;\n  float2 uv : TEXCOORD0;\n  UNITY_VERTEX_OUTPUT_STEREO\n};\n\nv2f vert (const appdata v)\n{\n  UNITY_SETUP_INSTANCE_ID(v);\n  UNITY_INITIALIZE_OUTPUT(v2f, v2f o);\n  UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o);\n  o.pos = UnityObjectToClipPos(v.vertex);\n  o.uv = v.texcoord;\n  return o;\n}\n\nfixed4 frag (const v2f_img i) : SV_Target\n{\n  UNITY_SETUP_STEREO_EYE_INDEX_POST_VERTEX(i);\n  const fixed4 col = UNITY_SAMPLE_SCREENSPACE_TEXTURE(_MainTex, UnityStereoTransformScreenSpaceTex(i.uv));\n  return fixed4(1 - col.rgb, col.a);\n}\n</code></pre> <pre><code>#include \"UnityCG.cginc\"\n\n#pragma vertex vert_img\n#pragma fragment frag\n\nUNITY_DECLARE_SCREENSPACE_TEXTURE(_MainTex);\n\nfixed4 frag (const v2f_img i) : SV_Target\n{\n  UNITY_SETUP_STEREO_EYE_INDEX_POST_VERTEX(i);\n  const fixed4 col = UNITY_SAMPLE_SCREENSPACE_TEXTURE(_MainTex, UnityStereoTransformScreenSpaceTex(i.uv));\n  return fixed4(1 - col.rgb, col.a);\n}\n</code></pre> <p>Warning</p> <p>Beat Saber applies a constant post-processing effect that converts alpha to bloom. If your model appears normal in the editor, but pure glowing white in-game, your shader is likely outputting an alpha of 1. Make sure to use a Beat Saber compatible shader or that your own shader is not outputting an alpha if you do not want it to glow.</p> <p>See some Beat Saber compatible shaders that comply with the alpha rule on nicoco007's Custom Avatars Unity project.</p> <p>If necesssary, the bloom effect can be disabled using SetCameraProperty, though this is not recommended because the will break other shaders that may rely on this effect, such as notes, walls, sabers, lighting, and ui.</p>"},{"location":"vivify/getting-started-with-vivify/#multipass","title":"Multipass","text":"<p>On versions past 1.29.1, players may use AssetBundleLoadingTools to instead use Multipass instead of Single Pass Instanced to keep compatibility with outdated shaders. Due to the nature of multipass, this unfortunately introduces a few problems.</p> <ul> <li>You will have to pay more attention to performance, as multipass is even less performant than 1.29.1's Single Pass Stereo rendering method.</li> <li>By default, Unity does not use <code>unity_StereoEyeIndex</code> with multipass. Luckily, Vivify sets two shader properties to help with this:<ul> <li>The <code>MULTIPASS_ENABLED</code> keyword will be enabled when a VR camera is rendering. Be mindful of Shader variant stripping possibly stripping this keyword from your shader.</li> <li>The <code>_StereoActiveEye</code> int will be set to either 0 or 1, mirroring what <code>unity_StereoEyeIndex</code> would have been.</li> </ul> </li> </ul> Example <p>Example shader that only renders in one eye, or renders half in both eyes. <pre><code>#pragma vertex vert\n#pragma fragment frag\n#pragma multi_compile_instancing\n#pragma shader_feature_fragment MULTIPASS_ENABLED\n\n#include \"UnityCG.cginc\"\n\nstruct v2f\n{\n  float4 vertex : SV_POSITION;\n  float2 uv : TEXCOORD0;\n  float3 localPos : TEXCOORD0;\n  UNITY_VERTEX_INPUT_INSTANCE_ID\n  UNITY_VERTEX_OUTPUT_STEREO\n};\n\nfloat _StereoEye;\n\n#if defined(MULTIPASS_ENABLED)\nfloat _StereoActiveEye;\n#endif\n\nv2f vert(appdata_base v)\n{\n  UNITY_SETUP_INSTANCE_ID(v);\n  UNITY_INITIALIZE_OUTPUT(v2f, v2f o);\n  UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o);\n\n  o.vertex = UnityObjectToClipPos(v.vertex);\n  o.uv = v.texcoord;\n  o.localPos = v.vertex.xyz;\n\n  return o;\n}\n\nfixed4 frag(v2f i) : SV_Target\n{\n  #if defined(USING_STEREO_MATRICES)\n    UNITY_SETUP_STEREO_EYE_INDEX_POST_VERTEX(i);\n    clip(0.9 - abs(_StereoEye - unity_StereoEyeIndex));\n  #elif MULTIPASS_ENABLED\n    clip(0.9 - abs(_StereoEye - _StereoActiveEye));\n  #else\n    clip(sign(_StereoEye - 0.5) * i.localPos.x);\n  #endif\n\n  return 1;\n}\n</code></pre></p>"},{"location":"vivify/getting-started-with-vivify/#creating-an-asset-bundle","title":"Creating an asset bundle","text":"<p>(Optional) See Unity Asset Bundle Browser tool. This tool allows you to browse the contents of a built asset bundle.</p> <p>Bundles should be placed in your map folder and called either <code>bundleWindows2019.vivify</code>, <code>bundleWindows2021.vivify</code>. Although Quest support does not exist yet, bundles should still be built for them and be called <code>bundleAndroid2021.vivify</code>.</p> <pre><code>Map Folder\n\u251c\u2500\u2500 bundleWindows2019.vivify\n\u251c\u2500\u2500 bundleWindows2021.vivify\n\u251c\u2500\u2500 bundleAndroid2021.vivify\n\u251c\u2500\u2500 song.ogg\n\u251c\u2500\u2500 cover.jpg\n\u251c\u2500\u2500 ExpertPlusStandard.dat\n\u2514\u2500\u2500 info.dat\n</code></pre> <p>When referencing an asset's file path in an event, remember to write in all lower case. You can use the above Asset Bundle Browser tool to see the path of specific assets.</p> <p>By default, when Vivify will check against a checksum when loading an asset bundle. This checksum can be found in the file next to wherever you build your bundle in the form of <code>*.manifest</code> (VivifyTemplate will instead write a <code>bundleinfo.json</code>). You can add the checksum to the map by using the <code>\"_assetBundle\"</code> field in the info.dat.</p> <p>Tip</p> <p>This checksum check can be disabled by enabling Debug Mode using the <code>-aerolunaisthebestmodder</code> launch parameter. Remember to make sure your map loads without this parameter.</p> <pre><code>  ...\n  \"_environmentName\": \"DefaultEnvironment\",\n  \"_allDirectionsEnvironmentName\": \"GlassDesertEnvironment\",\n  \"_customData\": {\n    \"_assetBundle\": {\n      \"_windows2019\": 1414251160,\n      \"_windows2021\": 6436275894,\n      \"_android2021\": 4262884586,\n    }\n  },\n  \"_difficultyBeatmapSets\": [\n    {\n  ...\n</code></pre>"}]}